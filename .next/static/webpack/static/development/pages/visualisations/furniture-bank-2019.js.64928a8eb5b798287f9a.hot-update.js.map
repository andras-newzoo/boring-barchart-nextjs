{"version":3,"file":"static/webpack/static/development/pages/visualisations/furniture-bank-2019.js.64928a8eb5b798287f9a.hot-update.js","sources":["webpack:///./components/AutoComplete/helperFunctions.js"],"sourcesContent":["import Autosuggest from \"react-autosuggest\";\nimport match from \"autosuggest-highlight/match\";\nimport parse from \"autosuggest-highlight/parse\";\n\nconst escapeRegexCharacters = str => str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n\nexport const getSuggestionValue = suggestion => `${suggestion.first} ${suggestion.last}`\n\nexport const getSuggestions = (data, key, value) => {\n  const escapedValue = escapeRegexCharacters(value.trim());\n  if (escapedValue === '') {\n    return [];\n  }\n  const regex = new RegExp('\\\\b' + escapedValue, 'i');\n  console.log(regex);\n  \n  console.log(data.filter(el => regex.test(getSuggestionValue(el[key]))));\n  \n  return data.filter(el => el[key]);\n}\n\n\n// function renderSuggestion(suggestion, { query }) {\n//   const suggestionText = `${suggestion.first} ${suggestion.last}`;\n//   const matches = AutosuggestHighlightMatch(suggestionText, query);\n//   const parts = AutosuggestHighlightParse(suggestionText, matches);\n\n//   return (\n//     <span className={'suggestion-content ' + suggestion.twitter}>\n//       <span className=\"name\">\n//         {\n//           parts.map((part, index) => {\n//             const className = part.highlight ? 'highlight' : null;\n\n//             return (\n//               <span className={className} key={index}>{part.text}</span>\n//             );\n//           })\n//         }\n//       </span>\n//     </span>\n//   );\n// }\n\n// class App extends React.Component {\n//   constructor() {\n//     super();\n\n//     this.state = {\n//       value: '',\n//       suggestions: []\n//     };    \n//   }\n\n//   onChange = (event, { newValue, method }) => {\n//     this.setState({\n//       value: newValue\n//     });\n//   };\n  \n//   onSuggestionsFetchRequested = ({ value }) => {\n//     this.setState({\n//       suggestions: getSuggestions(value)\n//     });\n//   };\n\n//   onSuggestionsClearRequested = () => {\n//     this.setState({\n//       suggestions: []\n//     });\n//   };\n\n//   render() {\n//     const { value, suggestions } = this.state;\n//     const inputProps = {\n//       placeholder: \"Type 'c'\",\n//       value,\n//       onChange: this.onChange\n//     };\n\n//     return (\n//       <Autosuggest \n//         suggestions={suggestions}\n//         onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n//         onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n//         getSuggestionValue={getSuggestionValue}\n//         renderSuggestion={renderSuggestion}\n//         inputProps={inputProps} />\n//     );\n//   }\n// }\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}