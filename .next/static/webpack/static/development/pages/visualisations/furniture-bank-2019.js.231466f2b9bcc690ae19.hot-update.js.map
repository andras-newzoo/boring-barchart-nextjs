{"version":3,"file":"static/webpack/static/development/pages/visualisations/furniture-bank-2019.js.231466f2b9bcc690ae19.hot-update.js","sources":["webpack:///./containers/FurnitureBank2019/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport {\n  MainContainer,\n  DashboardContainer,\n  ControlsContainer,\n  ChartsContainer,\n  LogoContainer,\n  MainTitle,\n  SocChartsContainer,\n  EnvChartsContainer,\n  LandFillContainer,\n  EmissionContainer,\n  ReqContainer,\n  ChartPaper,\n  colorRed,\n  ChartTitle,\n  colorGreen\n} from \"./styles\";\nimport {\n  ValueContainer,\n  MapContainer,\n  ControlContainer,\n  FamiliesContainer\n} from \"./containers\";\nimport { Message } from \"./components\";\nimport {\n  fontSizeM,\n  FlexContainer,\n  TextSpan,\n  fontWeightL,\n  fontSizeXL\n} from \"../../styles\";\nimport { LandFillSubContainer } from \"./styles/styledContainers\";\nimport { useSelector } from \"react-redux\";\nimport {\n  selectAllSelectedItems,\n  selectAllSelectedPrice,\n  selectAllSelectedVolume,\n  selectAllSelectedWeight\n} from \"../../store/furnitureBankReducer/selectors\";\nimport { ConvertedNumber } from \"../../components\";\nimport { getArray } from \"../../utils\";\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    background: colorRed,\n    color: \"white\",\n    fontSize: fontSizeM,\n    boxShadow: \"none\",\n    \"&:hover\": {\n      background: colorRed,\n      color: \"white\"\n    }\n  }\n}));\n\nconst AVG_MONTHLY_WASTE = 130;\nconst AVG_WEEKLY_WASTE = 30;\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const [ monthCount, setMonthCount ] = useState(0)\n  const [ weekCount, setWeekCount ] = useState(0)\n\n  const items = useSelector(selectAllSelectedItems);\n  const price = useSelector(selectAllSelectedPrice);\n  const weight = useSelector(selectAllSelectedWeight);\n  const volume = useSelector(selectAllSelectedVolume);\n\n  useEffect(() => {\n    const getMonth = () => Math.floor(weight/AVG_MONTHLY_WASTE)\n    if(getMonth() !== monthCount){\n      setMonthCount(getMonth())\n    }\n  }, [monthCount, weight])  \n  \n  useEffect(() => {\n    const getWeek = () => Math.floor((weight - (monthCount * AVG_MONTHLY_WASTE))/AVG_WEEKLY_WASTE)\n    if(getWeek() !== weekCount){\n      setWeekCount(getWeek())\n    }\n  }, [monthCount, weekCount, weight])  \n\n  const monthText = monthCount > 1 ? 'months' : 'month'\n  const weekText = weekCount > 1 ? 'weeks' : 'week'\n\n  const monthArray =  getArray(monthCount)\n  const weekArray =  getArray(weekCount)\n  \n  console.log(monthArray);\n  console.log(weekArray);\n  \n  return (\n    <>\n      <Helmet>\n        <title>Furniture Bank 2019</title>\n      </Helmet>\n      <MainContainer>\n        <DashboardContainer>\n          <ControlsContainer>\n            <LogoContainer>\n              <img\n                src=\"/static/logos/furnitureBank.svg\"\n                alt=\"furniture bank icon\"\n              />\n            </LogoContainer>\n            <ControlContainer />\n          </ControlsContainer>\n          <ChartsContainer>\n            <SocChartsContainer>\n              <MainTitle gridArea=\"title\">\n                What is the estimated social impact of your donation?\n              </MainTitle>\n              <MapContainer />\n              <FamiliesContainer />\n              <ValueContainer />\n            </SocChartsContainer>\n            <EnvChartsContainer>\n              <MainTitle gridArea=\"title\">\n                What is the estimated environmental impact of your donation?\n              </MainTitle>\n              <ChartPaper gridArea=\"landfill\">\n                <LandFillContainer>\n                  <ChartTitle>\n                    What is the estimated amount of waste saved?\n                  </ChartTitle>\n                  <Message />\n                  {\n                    !!weight &&\n                      <LandFillSubContainer gridArea=\"weight\">\n                        <FlexContainer area=\"num\">\n                          <ConvertedNumber\n                            data={weight}\n                            size={fontSizeXL}\n                            weight={fontWeightL}\n                            color={colorGreen}\n                            animate\n                            smallSuffix\n                            suffixSize={fontSizeM}\n                            suffixLineHeight={1.5}\n                            customSuffix=\"lbs\"\n                          />\n                        </FlexContainer>\n                        <FlexContainer\n                          area=\"icon\"\n                          align=\"flex-end\"\n                        >\n                            { \n                              monthArray && monthArray.length > 0 &&\n                              monthArray.map(\n                                el => \n                                <img\n                                  key={el}\n                                  className=\"garbage-month\"\n                                  src=\"/static/icons/furnitureBank/garbage.svg\"\n                                  alt=\"garbage month icon\"\n                                />\n                              )\n                            }\n                            {\n                              weekArray && weekArray.length > 0 && \n                              weekArray.map(\n                                el => \n                                <img\n                                  key={el}\n                                  className=\"garbage-week\"\n                                  src=\"/static/icons/furnitureBank/garbage.svg\"\n                                  alt=\"garbage week icon\"\n                                />\n                              )\n                            }\n                        </FlexContainer>\n                        <FlexContainer area=\"text\">\n                          <TextSpan>\n                            {\n                              !!monthCount &&\n                              `${monthCount} ${monthText}`\n                            }\n                            {\n                              !!weekCount ?\n                              `${weekCount} ${weekText}` :\n                              `Less than 1 ${weekText}` \n                            }\n                            {' '} of waste in an avg. Canadian household\n                          </TextSpan>\n                        </FlexContainer>\n                      </LandFillSubContainer>\n                    }\n                  <LandFillSubContainer gridArea=\"volume\">\n                    <FlexContainer area=\"num\">Number</FlexContainer>\n                    <FlexContainer area=\"icon\">Icons</FlexContainer>\n                    <FlexContainer area=\"text\">\n                      <TextSpan>\n                        Equivalent to 20% of an avg. cargo container\n                      </TextSpan>\n                    </FlexContainer>\n                  </LandFillSubContainer>\n                </LandFillContainer>\n              </ChartPaper>\n              <EmissionContainer>\n                <ChartPaper>\n                  <ChartTitle>\n                    What is the estimated CO2 emission saved?\n                  </ChartTitle>\n                  <Message />\n                </ChartPaper>\n              </EmissionContainer>\n            </EnvChartsContainer>\n            <ReqContainer>\n              <Button\n                className={classes.button}\n                variant=\"contained\"\n                disableRipple\n              >\n                Request a Pickup\n              </Button>\n            </ReqContainer>\n          </ChartsContainer>\n        </DashboardContainer>\n      </MainContainer>\n    </>\n  );\n};\nexport default Dashboard;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAiBA;AAMA;AACA;AAOA;AACA;AACA;AAMA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AALA;AADA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAYA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AAAA;;;;A","sourceRoot":""}