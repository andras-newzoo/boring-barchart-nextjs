{"version":3,"file":"static/webpack/static/development/pages/visualisations/furniture-bank-2019.js.87c884738fa38f4e2c54.hot-update.js","sources":["webpack:///./components/ItemChip/index.jsx","webpack:///./node_modules/react-redux/lib/components/Context.js","webpack:///./node_modules/react-redux/lib/hooks/useDispatch.js","webpack:///./node_modules/react-redux/lib/hooks/useReduxContext.js","webpack:///./node_modules/react-redux/lib/hooks/useStore.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport {\n  paddingXS,\n  fontWeightXS,\n  fontSizeM,\n  paddingS,\n  fontWeightXL,\n  fontWeightL\n} from \"../../styles/sharedStyles\";\nimport { colorGreyDark } from \"../../containers/FurnitureBank2019/styles\";\nimport { useDispatch } from \"react-redux/lib/hooks/useDispatch\";\n\nconst ControlElement = styled.div`\n  position: absolute;\n  top: ${props => props.top}rem;\n  left: ${props => props.left || 1.4}rem;\n  cursor: pointer;\n  font-weight: ${fontWeightL};\n  visibility: hidden;\n  color: #fff;\n`;\n\nconst Container = styled.div`\n  position: relative;\n\n  display: flex;\n  align-items: center;\n\n  width: calc(100% - 4rem);\n  height: ${props => props.height || 30}px;\n  padding: ${paddingXS};\n  margin: ${paddingS};\n  padding-left: 3rem;\n  font-weight: ${props => props.fontWeight || fontWeightXS};\n  font-size: ${fontSizeM};\n  border: 1px solid ${props => props.borderColor || colorGreyDark};\n  border-radius: 4px;\n\n  background: ${colorGreyDark};\n  color: #fff;\n\n  transition: 0.5s all;\n\n  &:hover ${ControlElement},\n  &:hover  ${ControlElement} {\n    visibility: visible;\n  }\n`;\n\nconst QuantityContainer = styled.div`\n  position: absolute;\n  width: 15px;\n  left: 1rem;\n  top: 50%;\n  transform: translateY(-50%);\n\n  display: flex;\n  justify-content: center;\n\n  font-weight: ${fontWeightXL};\n`;\n\nconst ItemChip = ({ style }) => {\n  const dispatch = useDispatch()\n  return (\n    <Container {...style}>\n      <ControlElement top={-.2}>+</ControlElement>\n      <ControlElement top={2} left={1.5}>-</ControlElement>\n      <QuantityContainer>2</QuantityContainer>\n      Air Conditioner\n    </Container>\n  );\n};\n\nexport default ItemChip;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports[\"default\"] = exports.ReactReduxContext = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar ReactReduxContext = _react[\"default\"].createContext(null);\n\nexports.ReactReduxContext = ReactReduxContext;\nvar _default = ReactReduxContext;\nexports[\"default\"] = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.createDispatchHook = createDispatchHook;\nexports.useDispatch = void 0;\n\nvar _Context = require(\"../components/Context\");\n\nvar _useStore = require(\"./useStore\");\n\n/**\n * Hook factory, which creates a `useDispatch` hook bound to a given context.\n *\n * @param {Function} [context=ReactReduxContext] Context passed to your `<Provider>`.\n * @returns {Function} A `useDispatch` hook bound to the specified context.\n */\nfunction createDispatchHook(context) {\n  if (context === void 0) {\n    context = _Context.ReactReduxContext;\n  }\n\n  var useStore = context === _Context.ReactReduxContext ? _useStore.useStore : (0, _useStore.createStoreHook)(context);\n  return function useDispatch() {\n    var store = useStore();\n    return store.dispatch;\n  };\n}\n/**\n * A hook to access the redux `dispatch` function.\n *\n * @returns {any|function} redux store's `dispatch` function\n *\n * @example\n *\n * import React, { useCallback } from 'react'\n * import { useDispatch } from 'react-redux'\n *\n * export const CounterComponent = ({ value }) => {\n *   const dispatch = useDispatch()\n *   const increaseCounter = useCallback(() => dispatch({ type: 'increase-counter' }), [])\n *   return (\n *     <div>\n *       <span>{value}</span>\n *       <button onClick={increaseCounter}>Increase counter</button>\n *     </div>\n *   )\n * }\n */\n\n\nvar useDispatch = createDispatchHook();\nexports.useDispatch = useDispatch;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.useReduxContext = useReduxContext;\n\nvar _react = require(\"react\");\n\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\n\nvar _Context = require(\"../components/Context\");\n\n/**\n * A hook to access the value of the `ReactReduxContext`. This is a low-level\n * hook that you should usually not need to call directly.\n *\n * @returns {any} the value of the `ReactReduxContext`\n *\n * @example\n *\n * import React from 'react'\n * import { useReduxContext } from 'react-redux'\n *\n * export const CounterComponent = ({ value }) => {\n *   const { store } = useReduxContext()\n *   return <div>{store.getState()}</div>\n * }\n */\nfunction useReduxContext() {\n  var contextValue = (0, _react.useContext)(_Context.ReactReduxContext);\n  (0, _invariant[\"default\"])(contextValue, 'could not find react-redux context value; please ensure the component is wrapped in a <Provider>');\n  return contextValue;\n}","\"use strict\";\n\nexports.__esModule = true;\nexports.createStoreHook = createStoreHook;\nexports.useStore = void 0;\n\nvar _react = require(\"react\");\n\nvar _Context = require(\"../components/Context\");\n\nvar _useReduxContext2 = require(\"./useReduxContext\");\n\n/**\n * Hook factory, which creates a `useStore` hook bound to a given context.\n *\n * @param {Function} [context=ReactReduxContext] Context passed to your `<Provider>`.\n * @returns {Function} A `useStore` hook bound to the specified context.\n */\nfunction createStoreHook(context) {\n  if (context === void 0) {\n    context = _Context.ReactReduxContext;\n  }\n\n  var useReduxContext = context === _Context.ReactReduxContext ? _useReduxContext2.useReduxContext : function () {\n    return (0, _react.useContext)(context);\n  };\n  return function useStore() {\n    var _useReduxContext = useReduxContext(),\n        store = _useReduxContext.store;\n\n    return store;\n  };\n}\n/**\n * A hook to access the redux store.\n *\n * @returns {any} the redux store\n *\n * @example\n *\n * import React from 'react'\n * import { useStore } from 'react-redux'\n *\n * export const ExampleComponent = () => {\n *   const store = useStore()\n *   return <div>{store.getState()}</div>\n * }\n */\n\n\nvar useStore = createStoreHook();\nexports.useStore = useStore;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAQA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAOA;AAAA;AAAA;AAAA;AAOA;AAAA;AAIA;AAAA;AAEA;AAAA;AAcA;AAAA;AAAA;AAAA;AACA;AAYA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}