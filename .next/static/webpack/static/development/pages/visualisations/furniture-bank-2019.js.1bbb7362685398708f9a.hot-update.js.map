{"version":3,"file":"static/webpack/static/development/pages/visualisations/furniture-bank-2019.js.1bbb7362685398708f9a.hot-update.js","sources":["webpack:///./containers/FurnitureBank2019/components/index.js","webpack:///./containers/FurnitureBank2019/containers/ControlContainer.jsx","webpack:///./containers/FurnitureBank2019/containers/index.js","webpack:///./containers/FurnitureBank2019/index.jsx"],"sourcesContent":["import Message from './Message'\nimport PercentageChart from './PercentageChart'\nimport PersonIcons from './PersonsIcons'\n\nexport { Message, PercentageChart, PersonIcons };\n","import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  ControlContainer as Control,\n  MainTitle,\n  PanelContainer,\n  colorGreen\n} from \"../styles\";\nimport { AutoComplete, ItemChip } from \"../../../components\"\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  addItem,\n  incrementItem,\n  decrementItem,\n  deleteItem\n} from \"../../../store/furnitureBankReducer/actions\";\nimport {\n  selectAllUnselected,\n  selectTotalQuantity,\n} from \"../../../store/furnitureBankReducer/selectors\";\n\nconst ControlContainer = () => {\n  const [dimensions, setDimensions] = useState(undefined);\n  const [ windowWidth, setWindowWidth ] = useState()\n  const panelContainerRef = useRef();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const panelWidth = panelContainerRef.current.clientWidth;\n    const panelHeight = panelContainerRef.current.clientHeight;\n    setDimensions({ width: panelWidth, height: panelHeight });\n  }, [panelContainerRef, windowWidth]);\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize)\n  },[])\n\n  const handleResize = () => setWindowWidth(window.innerWidth)\n  const handleSelected = selected => dispatch(addItem(selected));\n  const handleIncrementClick = item => dispatch(incrementItem(item));\n  const handleDecrementClick = item => dispatch(decrementItem(item));\n  const handleDeleteClick = item => dispatch(deleteItem(item));\n\n  const { selectedItems } = useSelector(state => state.furnitureBankReducer);\n  const allUnselected = useSelector(selectAllUnselected);\n  const totalQuantity = useSelector(selectTotalQuantity);\n\n  return (\n    <Control>\n      <MainTitle gridArea=\"title\">\n        Items to Donate <span>&nbsp; ( {totalQuantity} )</span>\n      </MainTitle>\n      <PanelContainer\n        ref={panelContainerRef}\n        height={dimensions && dimensions.height}\n      >\n        {selectedItems.length > 0 &&\n          selectedItems.map(item => (\n            <ItemChip\n              key={item.name}\n              handleIncrementClick={() => handleIncrementClick(item.name)}\n              handleDecrementClick={() => handleDecrementClick(item.name)}\n              handleDeleteClick={() => handleDeleteClick(item.name)}\n              content={item.name}\n              quantity={item.quantity}\n            />\n          ))}\n        <AutoComplete\n          data={allUnselected}\n          itemKey=\"product_name\"\n          handleSelected={handleSelected}\n          iconColor={colorGreen}\n          style={\n            dimensions && {\n              width: dimensions.width\n            }\n          }\n        />\n      </PanelContainer>\n    </Control>\n  );\n};\n\nexport default ControlContainer\n","import ValueContainer from './ValueContainer'\nimport MapContainer from './MapContainer'\nimport ControlContainer from './ControlContainer'\n\nexport {\n  ValueContainer,\n  MapContainer,\n  ControlContainer\n}","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Button } from \"@material-ui/core\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport {\n  MainContainer,\n  DashboardContainer,\n  ControlsContainer,\n  ChartsContainer,\n  LogoContainer,\n  MainTitle,\n  ChartTitle,\n  colorGreen,\n  SocChartsContainer,\n  FamilyContainer,\n  EnvChartsContainer,\n  LandFillContainer,\n  EmissionContainer,\n  ReqContainer,\n  ChartPaper\n} from \"./styles\";\nimport { ValueContainer, MapContainer, ControlContainer } from './containers'\nimport {Message, PersonIcons } from \"./components\";\nimport { fontSizeM } from \"../../styles\";\n\nconst useStyles = makeStyles(theme => ({\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  },\n  button: {\n    background: colorGreen,\n    color: \"white\",\n    fontSize: fontSizeM,\n    \"&:hover\": {\n      background: colorGreen,\n      color: \"white\"\n    }\n  }\n}));\n\n\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  \n  return (\n    <>\n      <Helmet>\n        <title>Furniture Bank 2019</title>\n      </Helmet>\n      <MainContainer>\n        <DashboardContainer>\n          <ControlsContainer>\n            <LogoContainer>\n              <img\n                src=\"/static/logos/furnitureBank.svg\"\n                alt=\"furniture bank icon\"\n              />\n            </LogoContainer>\n            <ControlContainer />\n          </ControlsContainer>\n          <ChartsContainer>\n            <SocChartsContainer>\n              <MainTitle gridArea=\"title\">\n                What is the estimated social impact of your donation?\n              </MainTitle>\n              <MapContainer />\n              <ChartPaper gridArea=\"families\">\n                <FamilyContainer>\n                  <ChartTitle>\n                    Who will be likely to receive your donation?\n                  </ChartTitle>\n                  <Message noData />\n                  <PersonIcons />\n                </FamilyContainer>\n              </ChartPaper>\n              <ValueContainer/>\n            </SocChartsContainer>\n            <EnvChartsContainer>\n              <MainTitle gridArea=\"title\">\n                What is the estimated environmental impact of your donation?\n              </MainTitle>\n              <LandFillContainer>\n                <ChartPaper>\n                  <Message />\n                </ChartPaper>\n              </LandFillContainer>\n              <EmissionContainer>\n                <ChartPaper>\n                  <Message />\n                </ChartPaper>\n              </EmissionContainer>\n            </EnvChartsContainer>\n            <ReqContainer>\n              <Button\n                className={classes.button}\n                variant=\"contained\"\n                disableRipple\n              >\n                Request a Pickup\n                <SendIcon fontSize=\"small\" className={classes.rightIcon} />\n              </Button>\n            </ReqContainer>\n          </ChartsContainer>\n        </DashboardContainer>\n      </MainContainer>\n    </>\n  );\n};\nexport default Dashboard;\n"],"mappings":";;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AAMA;AACA;AAEA;AAMA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AArBA;AAsBA;AAAA;AAtBA;AACA;AAsBA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAWA;AACA;AACA;AACA;AACA;AAEA;AADA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;;;;;;;;;;;;ACnFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AAEA;AAiBA;AACA;AACA;AAEA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAJA;AAJA;AAAA;AACA;AAgBA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAAA;;;;A","sourceRoot":""}