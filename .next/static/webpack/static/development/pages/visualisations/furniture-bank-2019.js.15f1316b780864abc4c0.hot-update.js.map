{"version":3,"file":"static/webpack/static/development/pages/visualisations/furniture-bank-2019.js.15f1316b780864abc4c0.hot-update.js","sources":["webpack:///./containers/FurnitureBank2019/components/index.js","webpack:///./containers/FurnitureBank2019/containers/MapContainer.jsx","webpack:///./containers/FurnitureBank2019/containers/index.js","webpack:///./containers/FurnitureBank2019/index.jsx","webpack:///./containers/FurnitureBank2019/styles/index.js","webpack:///./containers/FurnitureBank2019/styles/mapStyles.js"],"sourcesContent":["import ControlContainer from \"./ControlContainer\";\nimport Message from './Message'\nimport PercentageChart from './PercentageChart'\nimport PersonIcons from './PersonsIcons'\n\nexport { ControlContainer, Message, PercentageChart, PersonIcons };\n","import React, { useEffect, useRef, useState } from \"react\";\nimport ReactMapGL from \"react-map-gl\";\n\nimport { MapContainer, ChartPaper, ChartTitle, HEATMAP_SOURCE_ID, heatMapStyles } from \"../styles\";\nimport { useSelector } from \"react-redux\";\nimport { selectFilteredCoordinates } from \"../../../store/furnitureBankReducer/selectors\";\nimport { config } from \"../../../config\";\nimport { Message } from \"../components\";\n\nconst initialViewport = {\n  latitude: 43.702702563904154,\n  longitude: -79.5290090619582,\n  zoom: 9.070378236162412\n};\n\nconst MapContent = () => {\n  const filteredCoordinates = useSelector(selectFilteredCoordinates);\n  const [initMap, setInitMap] = useState(false);\n  const [viewport, setViewPort] = useState(initialViewport);\n  const mapRef = useRef();\n\n  const handleMapLoaded = () => {\n    mapRef.current.getMap().addSource(HEATMAP_SOURCE_ID, {\n      type: \"geojson\",\n      data: makeGeoJSON(filteredCoordinates)\n    });\n    mapRef.current.getMap().addLayer(heatMapStyles);\n    setInitMap(true);\n  };\n\n  useEffect(() => {\n    if (initMap) {\n      mapRef.current\n        .getMap()\n        .getSource(HEATMAP_SOURCE_ID)\n        .setData(makeGeoJSON(filteredCoordinates));\n    }\n  }, [filteredCoordinates, initMap]);\n\n  const makeGeoJSON = data => {\n    if (!data) return undefined;\n    return {\n      type: \"FeatureCollection\",\n      features: data.map(feature => {\n        return {\n          type: \"Feature\",\n          properties: {\n            id: feature.postal_code\n          },\n          geometry: {\n            type: \"Point\",\n            coordinates: feature.coors\n              ? [feature.coors.longitude, feature.coors.latitude, 0]\n              : [0, 0, 0]\n          }\n        };\n      })\n    };\n  };\n\n  return (\n    <MapContainer>\n      <ChartPaper>\n        <ChartTitle withBG>\n          In Which areas will your donated furniture be received?\n        </ChartTitle>\n        <Message noData withBG/>\n        <ReactMapGL\n          ref={mapRef}\n          mapboxApiAccessToken={config.MAP_API}\n          {...viewport}\n          width=\"100%\"\n          height=\"100%\"\n          onViewportChange={viewport => setViewPort({ ...viewport })}\n          mapStyle=\"mapbox://styles/szeandr/ck1f4skvt0xyl1ct93ti7k1s6\"\n          onLoad={handleMapLoaded}\n        ></ReactMapGL>\n      </ChartPaper>\n    </MapContainer>\n  );\n};\n\nexport default MapContent;\n","import ValueContainer from './ValueContainer'\nimport MapContainer from './MapContainer'\n\nexport {\n  ValueContainer,\n  MapContainer\n}","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Button } from \"@material-ui/core\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport {\n  MainContainer,\n  DashboardContainer,\n  ControlsContainer,\n  ChartsContainer,\n  LogoContainer,\n  MainTitle,\n  ChartTitle,\n  colorGreen,\n  SocChartsContainer,\n  FamilyContainer,\n  EnvChartsContainer,\n  LandFillContainer,\n  EmissionContainer,\n  ReqContainer,\n  ChartPaper\n} from \"./styles\";\nimport { ValueContainer, MapContainer} from './containers'\nimport { ControlContainer, Message, PersonIcons } from \"./components\";\nimport { fontSizeM } from \"../../styles\";\n\nconst useStyles = makeStyles(theme => ({\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  },\n  button: {\n    background: colorGreen,\n    color: \"white\",\n    fontSize: fontSizeM,\n    \"&:hover\": {\n      background: colorGreen,\n      color: \"white\"\n    }\n  }\n}));\n\n\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  \n  return (\n    <>\n      <Helmet>\n        <title>Furniture Bank 2019</title>\n      </Helmet>\n      <MainContainer>\n        <DashboardContainer>\n          <ControlsContainer>\n            <LogoContainer>\n              <img\n                src=\"/static/logos/furnitureBank.svg\"\n                alt=\"furniture bank icon\"\n              />\n            </LogoContainer>\n            <ControlContainer />\n          </ControlsContainer>\n          <ChartsContainer>\n            <SocChartsContainer>\n              <MainTitle gridArea=\"title\">\n                What is the estimated social impact of your donation?\n              </MainTitle>\n              <MapContainer />\n              <ChartPaper gridArea=\"families\">\n                <FamilyContainer>\n                  <ChartTitle>\n                    Who will be likely to receive your donation?\n                  </ChartTitle>\n                  <Message noData />\n                  <PersonIcons />\n                </FamilyContainer>\n              </ChartPaper>\n              <ValueContainer/>\n            </SocChartsContainer>\n            <EnvChartsContainer>\n              <MainTitle gridArea=\"title\">\n                What is the estimated environmental impact of your donation?\n              </MainTitle>\n              <LandFillContainer>\n                <ChartPaper>\n                  <Message />\n                </ChartPaper>\n              </LandFillContainer>\n              <EmissionContainer>\n                <ChartPaper>\n                  <Message />\n                </ChartPaper>\n              </EmissionContainer>\n            </EnvChartsContainer>\n            <ReqContainer>\n              <Button\n                className={classes.button}\n                variant=\"contained\"\n                disableRipple\n              >\n                Request a Pickup\n                <SendIcon fontSize=\"small\" className={classes.rightIcon} />\n              </Button>\n            </ReqContainer>\n          </ChartsContainer>\n        </DashboardContainer>\n      </MainContainer>\n    </>\n  );\n};\nexport default Dashboard;\n","import {\n  colorGreen,\n  colorRedDark,\n  colorRed,\n  colorGreyLight,\n  colorGreyDark,\n  media\n} from \"./variables\";\nimport {\n  MainContainer,\n  DashboardContainer,\n  ControlsContainer,\n  LogoContainer,\n  ControlContainer,\n  PanelContainer,\n  ChartsContainer,\n  SocChartsContainer,\n  MapContainer,\n  FamilyContainer,\n  PersonsContainer,\n  ValueContainer,\n  EnvChartsContainer,\n  LandFillContainer,\n  EmissionContainer,\n  ReqContainer,\n  DonationPercentageContainer\n} from \"./styledContainers\";\nimport { MainTitle, ChartTitle, ChartPaper } from \"./styledElements\";\nimport { HEATMAP_SOURCE_ID, heatMapStyles } from \"./mapStyles\";\n\nexport {\n  colorGreen,\n  colorRedDark,\n  colorRed,\n  colorGreyLight,\n  colorGreyDark,\n  media\n};\nexport {\n  MainContainer,\n  DashboardContainer,\n  ControlsContainer,\n  LogoContainer,\n  ControlContainer,\n  PanelContainer,\n  ChartsContainer,\n  SocChartsContainer,\n  MapContainer,\n  FamilyContainer,\n  PersonsContainer,\n  ValueContainer,\n  EnvChartsContainer,\n  LandFillContainer,\n  EmissionContainer,\n  ReqContainer,\n  DonationPercentageContainer\n};\nexport { MainTitle, ChartTitle, ChartPaper };\nexport { HEATMAP_SOURCE_ID, heatMapStyles };\n","export const HEATMAP_SOURCE_ID = \"earthquakes-source\";\nconst MAX_ZOOM_LEVEL = 20;\n\nexport const heatMapStyles = {\n  id: \"heatmap-layer\",\n  source: HEATMAP_SOURCE_ID,\n  maxzoom: MAX_ZOOM_LEVEL,\n  type: \"heatmap\",\n  paint: {\n    // Increase the heatmap weight based on frequency and property magnitude\n    \"heatmap-weight\": [\"interpolate\", [\"linear\"], [\"get\", \"mag\"], 0, 0, 6, 1],\n    // Increase the heatmap color weight weight by zoom level\n    // heatmap-intensity is a multiplier on top of heatmap-weight\n    \"heatmap-intensity\": [\n      \"interpolate\",\n      [\"linear\"],\n      [\"zoom\"],\n      0,\n      1,\n      MAX_ZOOM_LEVEL,\n      3\n    ],\n    // Color ramp for heatmap.  Domain is 0 (low) to 1 (high).\n    // Begin color ramp at 0-stop with a 0-transparancy color\n    // to create a blur-like effect.\n    \"heatmap-color\": [\n      \"interpolate\",\n      [\"linear\"],\n      [\"heatmap-density\"],\n      0,\n      \"rgba(33,102,172,0)\",\n      0.2,\n      \"#c4f6e3\",\n      0.4,\n      \"#9be1c7\",\n      0.8,\n      \"#70cbac\",\n      1,\n      \"#3db692\"\n    ],\n    // Adjust the heatmap radius by zoom level\n    \"heatmap-radius\": [\n      \"interpolate\",\n      [\"linear\"],\n      [\"zoom\"],\n      0,\n      2,\n      MAX_ZOOM_LEVEL,\n      20\n    ],\n    // // Transition from heatmap to circle layer by zoom level\n    \"heatmap-opacity\": [\"interpolate\", [\"linear\"], [\"zoom\"], 10, 1, 20, 0]\n  }\n};\n"],"mappings":"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","sourceRoot":""}