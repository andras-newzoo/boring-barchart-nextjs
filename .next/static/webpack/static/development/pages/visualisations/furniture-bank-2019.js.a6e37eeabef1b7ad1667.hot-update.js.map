{"version":3,"file":"static/webpack/static/development/pages/visualisations/furniture-bank-2019.js.a6e37eeabef1b7ad1667.hot-update.js","sources":["webpack:///./containers/FurnitureBank2019/index.jsx"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport {\n  MainContainer,\n  DashboardContainer,\n  ControlsContainer,\n  ChartsContainer,\n  LogoContainer\n} from \"./styles\";\nimport { ControlContainer } from \"./components\";\nimport { useSelector } from \"react-redux\";\nimport { selectFilteredCoordinates } from \"../../store/furnitureBankReducer/selectors\";\nimport { MapContainer } from \"./styles/styledContainers\";\nimport styled from \"styled-components\";\nimport ReactMapGL from 'react-map-gl';\nimport SimpleDot from \"../../components/IconComponents/SimpleDot\";\nimport {heatMapStyles, HEATMAP_SOURCE_ID} from './components/Map/styles';\nimport coors from './test.json'\n\nconst Dashboard = () => {\n  const filteredCoordinates = useSelector(selectFilteredCoordinates);\n  const mapRef = useRef()\n  const viewport = {\n    width: \"100%\",\n    height: \"100%\",\n    latitude: 43.65107,\n    longitude: -79.347015,\n    zoom: 9\n  };\n\n  // useEffect(() => {\n  //   const myGeoJSONData = makeGeoJSON(filteredCoordinates);\n  //   console.log(myGeoJSONData);\n  //   // if(myGeoJSONData.features.length){\n  //     mapRef.current.getMap().addSource(HEATMAP_SOURCE_ID, {type: 'geojson', data: coors});\n  //     mapRef.current.getMap().addLayer(heatMapStyles);\n  //   // }\n  // }, [])\n\n  const handleMapLoaded = () => {\n    const myGeoJSONData = makeGeoJSON(filteredCoordinates);\n\n    console.log(myGeoJSONData);\n    console.log(coors);\n    \n    mapRef.current.getMap().addSource(HEATMAP_SOURCE_ID, {type: 'geojson', data: myGeoJSONData});\n    mapRef.current.getMap().addLayer(heatMapStyles);\n  }\n  \n  \n  const makeGeoJSON = (data) => {\n    if (!data) return undefined\n    return {\n      type: 'FeatureCollection',\n      features: data.map(feature => {\n        return {\n          \"type\": \"Feature\",\n          \"properties\": {\n            \"id\": feature.postal_code,\n            \"name\": feature.name\n          },\n          \"geometry\": {\n            \"type\": \"Point\",\n            \"coordinates\": [ feature.longitude, feature.latitude, 0]\n          }\n        }\n      })\n    }\n  };\n\n  // console.log(coors);\n  // console.log(makeGeoJSON(filteredCoordinates))\n  \n  return (\n    <>\n      <Helmet>\n        <title>Furniture Bank 2019</title>\n      </Helmet>\n      <MainContainer>\n        <DashboardContainer>\n          <ControlsContainer>\n            <LogoContainer>\n              <img\n                src=\"/static/logos/furnitureBank.svg\"\n                alt=\"furniture bank icon\"\n              />\n            </LogoContainer>\n            <ControlContainer />\n          </ControlsContainer>\n          <ChartsContainer>\n            <MapContainer>\n              <ReactMapGL\n                ref={mapRef}\n                mapboxApiAccessToken=\"pk.eyJ1Ijoic3plYW5kciIsImEiOiJjajlpeWxnNHUzbWNiMzNvcnF1ZGUzbG5rIn0.fk33YGLOHSZtT_CMEWoIag\"\n                {...viewport}\n                mapStyle=\"mapbox://styles/szeandr/cje3v8qwedxub2st94yulcma7\"\n                onLoad={handleMapLoaded}\n              >\n              {/* <Source type=\"geojson\" data={myGeoJSONData}>\n                <Layer {...heatmapLayer} />\n              </Source> */}\n              {/* <HeatmapOverlay locations={cities} {...viewport}/> */}\n                {/* {coordinatesData.map(coor => (\n                  <Marker latitude={coor.latitude} longitude={coor.longitude}>\n                    <SimpleDot widht={5} height={5} />\n                  </Marker>\n                ))} */}\n              </ReactMapGL>\n            </MapContainer>\n          </ChartsContainer>\n        </DashboardContainer>\n      </MainContainer>\n    </>\n  );\n};\nexport default Dashboard;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AANA;AAWA;AAdA;AAgBA;AAGA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAIA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA;AACA;AAAA;;;;A","sourceRoot":""}