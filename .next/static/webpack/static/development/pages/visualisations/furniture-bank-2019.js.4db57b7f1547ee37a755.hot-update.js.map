{"version":3,"file":"static/webpack/static/development/pages/visualisations/furniture-bank-2019.js.4db57b7f1547ee37a755.hot-update.js","sources":["webpack:///./containers/FurnitureBank2019/containers/LandFillContainer.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  ChartPaper,\n  ChartTitle,\n  LandFillSubContainer,\n  LandFillContainer as Container,\n  colorGreen,\n  ContainerChart\n} from \"../styles\";\nimport { Message } from \"../components\";\nimport {\n  selectAllSelectedWeight,\n  selectAllSelectedVolume\n} from \"../../../store/furnitureBankReducer/selectors\";\nimport { useSelector } from \"react-redux\";\nimport { getArray } from \"../../../utils\";\nimport {\n  FlexContainer,\n  fontSizeXL,\n  fontWeightL,\n  fontSizeM,\n  TextSpan\n} from \"../../../styles\";\nimport { ConvertedNumber } from \"../../../components\";\n\nconst AVG_MONTHLY_WASTE = 130;\nconst AVG_WEEKLY_WASTE = 30;\nconst CARGO_VOLUME = 1179;\n\nconst LandFillContainer = () => {\n  const [monthCount, setMonthCount] = useState(0);\n  const [weekCount, setWeekCount] = useState(0);\n\n  const weight = useSelector(selectAllSelectedWeight);\n  const volume = useSelector(selectAllSelectedVolume);\n\n  useEffect(() => {\n    const getMonth = () => Math.floor(weight / AVG_MONTHLY_WASTE);\n    if (getMonth() !== monthCount) {\n      setMonthCount(getMonth());\n    }\n  }, [monthCount, weight]);\n\n  useEffect(() => {\n    const getWeek = () =>\n      Math.floor((weight - monthCount * AVG_MONTHLY_WASTE) / AVG_WEEKLY_WASTE);\n    if (getWeek() !== weekCount) {\n      setWeekCount(getWeek());\n    }\n  }, [monthCount, weekCount, weight]);\n\n  const monthText = monthCount > 1 ? \"months\" : \"month\";\n  const weekText = weekCount > 1 ? \"weeks\" : \"week\";\n\n  const monthArray = getArray(monthCount);\n  const weekArray = getArray(weekCount);\n\n  return (\n    <ChartPaper gridArea=\"landfill\">\n      <Container>\n        <ChartTitle>What is the estimated amount of waste saved?</ChartTitle>\n        <Message />\n        {!!weight && (\n          <LandFillSubContainer gridArea=\"weight\">\n            <FlexContainer area=\"num\">\n              <ConvertedNumber\n                data={weight}\n                size={fontSizeXL}\n                weight={fontWeightL}\n                color={colorGreen}\n                animate\n                smallSuffix\n                suffixSize={fontSizeM}\n                suffixLineHeight={1.5}\n                customSuffix=\"lbs\"\n              />\n            </FlexContainer>\n            <FlexContainer area=\"icon\" align=\"flex-end\">\n              {monthArray &&\n                monthArray.length > 0 &&\n                monthArray.map(el => (\n                  <img\n                    key={el}\n                    className=\"garbage-month\"\n                    src=\"/static/icons/furnitureBank/garbage.svg\"\n                    alt=\"garbage month icon\"\n                  />\n                ))}\n              {weekArray &&\n                weekArray.length > 0 &&\n                weekArray.map(el => (\n                  <img\n                    key={el}\n                    className=\"garbage-week\"\n                    src=\"/static/icons/furnitureBank/garbage.svg\"\n                    alt=\"garbage week icon\"\n                  />\n                ))}\n            </FlexContainer>\n            <FlexContainer area=\"text\">\n              <TextSpan>\n                {!!monthCount && `${monthCount} ${monthText}`}\n                {!!monthCount && !!weekCount && ` and `}\n                {!!weekCount\n                  ? `${weekCount} ${weekText}`\n                  : !monthCount && `Less than 1 ${weekText}`}{\" \"}\n                of waste in an avg. Canadian household\n              </TextSpan>\n            </FlexContainer>\n          </LandFillSubContainer>\n        )}\n        {!!volume && (\n          <LandFillSubContainer gridArea=\"volume\">\n            <FlexContainer area=\"num\">\n              <ConvertedNumber\n                data={volume}\n                size={fontSizeXL}\n                weight={fontWeightL}\n                color={colorGreen}\n                animate\n                smallSuffix\n                suffixSize={fontSizeM}\n                suffixLineHeight={1.5}\n                customSuffix=\"cu.ft\"\n              />\n            </FlexContainer>\n            <FlexContainer area=\"icon\" align=\"flex-start\">\n              <ContainerChart height={volume / CARGO_VOLUME} />\n            </FlexContainer>\n            <FlexContainer area=\"icon\">\n              <img\n                className=\"container\"\n                src=\"/static/icons/furnitureBank/container.svg\"\n                alt=\"container icon\"\n              />\n            </FlexContainer>\n            <FlexContainer area=\"text\">\n              <TextSpan>\n                Equivalent to{\" \"}\n                <ConvertedNumber\n                  data={volume / CARGO_VOLUME}\n                  display=\"inline-block\"\n                  weight={fontWeightL}\n                  color={colorGreen}\n                  perc\n                  animate\n                />{\" \"}\n                of an avg. cargo container\n              </TextSpan>\n            </FlexContainer>\n          </LandFillSubContainer>\n        )}\n      </Container>\n    </ChartPaper>\n  );\n};\n\nexport default LandFillContainer;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAQA;AACA;AAIA;AACA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAUA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AACA;AACA;;;;A","sourceRoot":""}