{"version":3,"file":"static/webpack/static/development/pages/visualisations/furniture-bank-2019.js.113c95a9213082d5eebf.hot-update.js","sources":["webpack:///./components/ConvertedNumber/index.jsx"],"sourcesContent":["import { format } from \"d3-format\";\nimport React, { useState } from \"react\";\nimport CountUp from \"react-countup\";\nimport styled, { keyframes, css } from \"styled-components\";\nimport { fontSizeM, fontWeightS, fontSizeS, colorGrey } from \"../../styles/sharedStyles\";\n\nexport const getFormattedNumber = ({ val, perc, expPlus }) => {\n  let formatKey;\n  if (perc) {\n    if (expPlus) {\n      if (-0.1 < val && val < 0.1) {\n        formatKey = \"+.2%\";\n      } else {\n        formatKey = \"+.1%\";\n      }\n    } else {\n      if (-0.1 < val && val < 0.1) {\n        formatKey = \".2%\";\n      } else {\n        formatKey = \".1%\";\n      }\n    }\n  } else {\n    if (expPlus) {\n      if (-1 < val && val < 1) {\n        formatKey = \"+.2f\";\n      } else {\n        formatKey = \"+.3s\";\n      }\n    } else {\n      if (-1 < val && val < 1) {\n        formatKey = \".2f\";\n      } else {\n        formatKey = \".3s\";\n      }\n    }\n  }\n  return val ? format(formatKey)(val).replace(/([a-zA-Z%])/g, \"\") : \"-\";\n};\n\nexport const getSuffix = ({ val, custom, perc }) => {\n  if (val === undefined) {\n    return \"\";\n  }\n  if (custom) {\n    return custom;\n  }\n  if (perc) {\n    return \"%\";\n  }\n  if (val < 1000) {\n    return \"\";\n  }\n  if (1000 <= val && val < 1000000) {\n    return \"K\";\n  }\n  if (1000000 <= val && val < 1000000000) {\n    return \"M\";\n  }\n  if (1000000000 <= val) {\n    return \"B\";\n  }\n};\nconst fadein = keyframes`\n    from { opacity: 0; }\n    to   { opacity: 1; }\n`;\n\nconst Container = styled.span`\n  display: flex;\n  align-items: flex-end;\n\n  ${props =>\n    props.isInitalized &&\n    css`\n      animation: ${fadein} 2s;\n    `}\n  font-size: ${props => props.size}; \n  font-weight: ${props => props.weight};\n  color: ${props => props.color};\n  line-height: ${props => props.lineHeight};\n  ${props =>\n    props.smallSuffix &&\n    css`\n      .suffix {\n        display: flex;\n        display: block;\n        font-size: ${props.suffixSize};\n        margin-left: 3px;\n        line-height: ${props.suffixLineHeight}\n      }\n    `}\n`;\n\nconst ConvertedNumber = ({\n  data,\n  duration = 2,\n  perc,\n  prefix,\n  weight = fontWeightS,\n  size = fontSizeM,\n  color = colorGrey,\n  suffixSize= fontSizeS,\n  lineHeight= 1.2,\n  suffixLineHeight = 1,\n  customSuffix,\n  animate,\n  smallSuffix,\n  expPlus,\n  period,\n  suffixSpace\n}) => {\n  const [isInitalized, setIsInitalized] = useState(false);\n  const styles = { weight, size, smallSuffix, suffixSize, color, lineHeight, suffixLineHeight };\n  if (data === undefined) return <div></div>;\n  const suffix = getSuffix({ val: data, custom: customSuffix, perc });\n  return (\n    <>\n      <Container {...styles}>\n        {prefix}\n        {animate ? (\n          <CountUp\n            end={data}\n            decimals={3}\n            preserveValue\n            formattingFn={val => getFormattedNumber({ val, perc, expPlus })}\n            onEnd={() => !isInitalized && setIsInitalized(true)}\n            duration={duration}\n            decimal=\".\"\n          />\n        ) : (\n          getFormattedNumber({ val: data, perc, expPlus })\n        )}\n        {suffix && (\n          <span className=\"suffix\">\n            {suffixSpace && \" \"}\n            {suffix}\n          </span>\n        )}\n        {period && <span className=\"period\"> {period}</span>}\n      </Container>\n    </>\n  );\n};\n\nexport default ConvertedNumber;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AAIA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAYA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}