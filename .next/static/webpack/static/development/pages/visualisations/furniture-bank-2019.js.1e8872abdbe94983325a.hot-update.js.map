{"version":3,"file":"static/webpack/static/development/pages/visualisations/furniture-bank-2019.js.1e8872abdbe94983325a.hot-update.js","sources":["webpack:///./components/AutoComplete/index.jsx","webpack:///./components/AutoComplete/styles.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Autosuggest from \"react-autosuggest\";\nimport match from \"autosuggest-highlight/match\";\nimport parse from \"autosuggest-highlight/parse\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { fontWeightS, fontWeightL } from \"../../styles/sharedStyles\";\nimport { Grid } from \"@material-ui/core\";\nimport { useStyles, AddIcon, Container } from \"./styles\";\n\n\nconst escapeRegexCharacters = str => str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\nconst getSuggestionValue = (suggestion, key) => suggestion[key]\n\nconst getSuggestions = (data, key, value) => {\n  const escapedValue = escapeRegexCharacters(value.trim());\n\n  if (escapedValue === \"\") {\n    return [];\n  }\n\n  const regex = new RegExp(\"\\\\b\" + escapedValue, \"i\");\n  \n  return data.filter(el => regex.test(el[key]));\n}\n\n\nconst renderSuggestion = (suggestion, { query }, key) => {\n  \n  const suggestionText = suggestion[key]\n  const matches = match(suggestionText, query);\n  const parts = parse(suggestionText, matches);\n\n  return (\n    <span className={\"suggestion-content \" + suggestion.twitter}>\n      <span className=\"name\">\n        {parts.map((part, index) => {\n          const className = part.highlight ? \"highlight\" : null;\n          return (\n            <span className={className} key={index}>\n              {part.text}\n            </span>\n          );\n        })}\n      </span>\n    </span>\n  );\n}\n\nconst AutoComplete = ({\n  data, itemKey\n}) => {\n  const [value, setValue] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n\n  const handleOnChange = (_, { newValue }) => setValue(newValue);\n  const onSuggestionsFetchRequested = ({ value }) => setSuggestions(getSuggestions(data, itemKey, value));\n  const onSuggestionsClearRequested = () => setSuggestions([]);\n\n  const inputProps = {\n    placeholder: \"Add new item\",\n    value,\n    onChange: handleOnChange\n  };\n  return (\n    <Container>\n      <Autosuggest\n        suggestions={suggestions}\n        onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n        onSuggestionsClearRequested={onSuggestionsClearRequested}\n        getSuggestionValue={suggestion => getSuggestionValue(suggestion, itemKey)}\n        renderSuggestion={(suggestion, query) => renderSuggestion(suggestion, query, itemKey)}\n        inputProps={inputProps}\n      />  \n    </Container>\n  );\n};\n\nexport default AutoComplete;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  body {\n    font-family: Helvetica, sans-serif;\n  }\n\n  .react-autosuggest__container {\n    position: relative;\n  }\n\n  .react-autosuggest__input {\n    width: 240px;\n    height: 30px;\n    padding: 10px 20px;\n    font-family: Helvetica, sans-serif;\n    font-weight: 300;\n    font-size: 16px;\n    border: 1px solid #aaa;\n    border-radius: 4px;\n  }\n\n  .react-autosuggest__input:focus {\n    outline: none;\n  }\n\n  .react-autosuggest__container--open .react-autosuggest__input {\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n\n  .react-autosuggest__suggestions-container {\n    display: none;\n  }\n\n  .react-autosuggest__container--open\n    .react-autosuggest__suggestions-container {\n    display: block;\n    position: absolute;\n    top: 51px;\n    width: 280px;\n    border: 1px solid #aaa;\n    background-color: #fff;\n    font-family: Helvetica, sans-serif;\n    font-weight: 300;\n    font-size: 16px;\n    border-bottom-left-radius: 4px;\n    border-bottom-right-radius: 4px;\n    z-index: 2;\n  }\n\n  .react-autosuggest__suggestions-list {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n  }\n\n  .react-autosuggest__suggestion {\n    cursor: pointer;\n    padding: 10px 20px;\n  }\n\n  .react-autosuggest__suggestion:not(:first-child) {\n    border-top: 1px solid #ddd;\n  }\n\n  .react-autosuggest__suggestion--focused {\n    background-color: #0c7eaf;\n    color: #fff;\n  }\n\n  .suggestion-content {\n    display: flex;\n    align-items: center;\n    background-repeat: no-repeat;\n  }\n\n  .dancounsell {\n    background-image: url(https://s3.amazonaws.com/uifaces/faces/twitter/dancounsell/48.jpg);\n  }\n\n  .ladylexy {\n    background-image: url(https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/48.jpg);\n  }\n\n  .mtnmissy {\n    background-image: url(https://s3.amazonaws.com/uifaces/faces/twitter/mtnmissy/48.jpg);\n  }\n\n  .steveodom {\n    background-image: url(https://s3.amazonaws.com/uifaces/faces/twitter/steveodom/48.jpg);\n  }\n\n  .name {\n    margin-left: 68px;\n    line-height: 45px;\n  }\n\n  .highlight {\n    color: #ee0000;\n    font-weight: bold;\n  }\n\n  .react-autosuggest__suggestion--focused .highlight {\n    color: #120000;\n  }\n`;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAIA;AACA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/EA;AAEA;;;;;;;;;;;;;;;;A","sourceRoot":""}