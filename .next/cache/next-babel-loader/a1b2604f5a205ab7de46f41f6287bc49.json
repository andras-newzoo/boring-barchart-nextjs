{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/andrasszesztai/Desktop/boring-barchart-nextjs/containers/FurnitureBank2019/index.jsx\";\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { MainContainer, DashboardContainer, ControlsContainer, ChartsContainer, LogoContainer } from \"./styles\";\nimport { ControlContainer } from \"./components\";\nimport { useSelector } from \"react-redux\";\nimport { selectFilteredCoordinates } from \"../../store/furnitureBankReducer/selectors\";\nimport { MapContainer } from \"./styles/styledContainers\";\nimport styled from \"styled-components\";\nimport ReactMapGL from 'react-map-gl';\nimport SimpleDot from \"../../components/IconComponents/SimpleDot\";\nimport { heatMapStyles, HEATMAP_SOURCE_ID } from './components/Map/styles';\nimport coors from './test.json';\n\nvar Dashboard = function Dashboard() {\n  var filteredCoordinates = useSelector(selectFilteredCoordinates);\n  var mapRef = useRef();\n  var viewport = {\n    width: \"100%\",\n    height: \"100%\",\n    latitude: 43.65107,\n    longitude: -79.347015,\n    zoom: 9\n  }; // useEffect(() => {\n  //   const myGeoJSONData = makeGeoJSON(filteredCoordinates);\n  //   console.log(myGeoJSONData);\n  //   // if(myGeoJSONData.features.length){\n  //     mapRef.current.getMap().addSource(HEATMAP_SOURCE_ID, {type: 'geojson', data: coors});\n  //     mapRef.current.getMap().addLayer(heatMapStyles);\n  //   // }\n  // }, [])\n\n  var handleMapLoaded = function handleMapLoaded() {\n    mapRef.current.getMap().addSource(HEATMAP_SOURCE_ID, {\n      type: 'geojson',\n      data: coors\n    });\n    mapRef.current.getMap().addLayer(heatMapStyles);\n  };\n\n  var makeGeoJSON = function makeGeoJSON(data) {\n    if (!data) return undefined;\n    return {\n      type: 'FeatureCollection',\n      features: data.map(function (feature) {\n        return {\n          \"type\": \"Feature\",\n          \"properties\": {\n            \"id\": feature.postal_code,\n            \"name\": feature.name\n          },\n          \"geometry\": {\n            \"type\": \"Point\",\n            \"coordinates\": [feature.latitude, feature.longitude]\n          }\n        };\n      })\n    };\n  }; // const handleMapLoaded = () => {\n  // };\n\n\n  return __jsx(React.Fragment, null, __jsx(Helmet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Furniture Bank 2019\")), __jsx(MainContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(DashboardContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, __jsx(ControlsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(LogoContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: \"/static/logos/furnitureBank.svg\",\n    alt: \"furniture bank icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), __jsx(ControlContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), __jsx(ChartsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(MapContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, __jsx(ReactMapGL, _extends({\n    ref: mapRef,\n    mapboxApiAccessToken: \"pk.eyJ1Ijoic3plYW5kciIsImEiOiJjajlpeWxnNHUzbWNiMzNvcnF1ZGUzbG5rIn0.fk33YGLOHSZtT_CMEWoIag\"\n  }, viewport, {\n    mapStyle: \"mapbox://styles/szeandr/cje3v8qwedxub2st94yulcma7\",\n    onLoad: handleMapLoaded,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })))))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/andrasszesztai/Desktop/boring-barchart-nextjs/containers/FurnitureBank2019/index.jsx"],"names":["React","useRef","useEffect","Helmet","MainContainer","DashboardContainer","ControlsContainer","ChartsContainer","LogoContainer","ControlContainer","useSelector","selectFilteredCoordinates","MapContainer","styled","ReactMapGL","SimpleDot","heatMapStyles","HEATMAP_SOURCE_ID","coors","Dashboard","filteredCoordinates","mapRef","viewport","width","height","latitude","longitude","zoom","handleMapLoaded","current","getMap","addSource","type","data","addLayer","makeGeoJSON","undefined","features","map","feature","postal_code","name"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport {\n  MainContainer,\n  DashboardContainer,\n  ControlsContainer,\n  ChartsContainer,\n  LogoContainer\n} from \"./styles\";\nimport { ControlContainer } from \"./components\";\nimport { useSelector } from \"react-redux\";\nimport { selectFilteredCoordinates } from \"../../store/furnitureBankReducer/selectors\";\nimport { MapContainer } from \"./styles/styledContainers\";\nimport styled from \"styled-components\";\nimport ReactMapGL from 'react-map-gl';\nimport SimpleDot from \"../../components/IconComponents/SimpleDot\";\nimport {heatMapStyles, HEATMAP_SOURCE_ID} from './components/Map/styles';\nimport coors from './test.json'\n\nconst Dashboard = () => {\n  const filteredCoordinates = useSelector(selectFilteredCoordinates);\n  const mapRef = useRef()\n  const viewport = {\n    width: \"100%\",\n    height: \"100%\",\n    latitude: 43.65107,\n    longitude: -79.347015,\n    zoom: 9\n  };\n\n  // useEffect(() => {\n  //   const myGeoJSONData = makeGeoJSON(filteredCoordinates);\n  //   console.log(myGeoJSONData);\n  //   // if(myGeoJSONData.features.length){\n  //     mapRef.current.getMap().addSource(HEATMAP_SOURCE_ID, {type: 'geojson', data: coors});\n  //     mapRef.current.getMap().addLayer(heatMapStyles);\n  //   // }\n  // }, [])\n\n  const handleMapLoaded = () => {\n    mapRef.current.getMap().addSource(HEATMAP_SOURCE_ID, {type: 'geojson', data: coors});\n    mapRef.current.getMap().addLayer(heatMapStyles);\n  }\n\n  \n  const makeGeoJSON = (data) => {\n    if (!data) return undefined\n    return {\n      type: 'FeatureCollection',\n      features: data.map(feature => {\n        return {\n          \"type\": \"Feature\",\n          \"properties\": {\n            \"id\": feature.postal_code,\n            \"name\": feature.name\n          },\n          \"geometry\": {\n            \"type\": \"Point\",\n            \"coordinates\": [ feature.latitude, feature.longitude]\n          }\n        }\n      })\n    }\n  };\n  \n  // const handleMapLoaded = () => {\n\n  // };\n\n  return (\n    <>\n      <Helmet>\n        <title>Furniture Bank 2019</title>\n      </Helmet>\n      <MainContainer>\n        <DashboardContainer>\n          <ControlsContainer>\n            <LogoContainer>\n              <img\n                src=\"/static/logos/furnitureBank.svg\"\n                alt=\"furniture bank icon\"\n              />\n            </LogoContainer>\n            <ControlContainer />\n          </ControlsContainer>\n          <ChartsContainer>\n            <MapContainer>\n              <ReactMapGL\n                ref={mapRef}\n                mapboxApiAccessToken=\"pk.eyJ1Ijoic3plYW5kciIsImEiOiJjajlpeWxnNHUzbWNiMzNvcnF1ZGUzbG5rIn0.fk33YGLOHSZtT_CMEWoIag\"\n                {...viewport}\n                mapStyle=\"mapbox://styles/szeandr/cje3v8qwedxub2st94yulcma7\"\n                onLoad={handleMapLoaded}\n              >\n              {/* <Source type=\"geojson\" data={myGeoJSONData}>\n                <Layer {...heatmapLayer} />\n              </Source> */}\n              {/* <HeatmapOverlay locations={cities} {...viewport}/> */}\n                {/* {coordinatesData.map(coor => (\n                  <Marker latitude={coor.latitude} longitude={coor.longitude}>\n                    <SimpleDot widht={5} height={5} />\n                  </Marker>\n                ))} */}\n              </ReactMapGL>\n            </MapContainer>\n          </ChartsContainer>\n        </DashboardContainer>\n      </MainContainer>\n    </>\n  );\n};\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}