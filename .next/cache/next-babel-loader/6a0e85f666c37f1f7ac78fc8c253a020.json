{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andrasszesztai/Desktop/boring-barchart-nextjs/components/IconChart/IconChart.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport _ from 'lodash';\nimport { select } from 'd3-selection';\nimport { scaleBand, scaleLinear } from 'd3-scale';\nimport 'd3-transition';\nimport { Link } from 'react-router-dom';\nvar Wrapper = styled.div.withConfig({\n  displayName: \"IconChart__Wrapper\",\n  componentId: \"sc-1oa1hct-0\"\n})([\"svg{cursor:pointer;}\"]);\n\nvar IconChart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(IconChart, _Component);\n\n  function IconChart(props) {\n    var _this;\n\n    _classCallCheck(this, IconChart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IconChart).call(this, props));\n    _this.state = {\n      location: _this.props.location,\n      data: [{\n        sortKey: 0,\n        yKey: 'A',\n        xKey: 250\n      }, {\n        sortKey: 1,\n        yKey: 'B',\n        xKey: 300\n      }, {\n        sortKey: 2,\n        yKey: 'C',\n        xKey: 200\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(IconChart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initVis();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.location !== this.props.location) {\n        this.randomizeData();\n      }\n\n      if (this.props.fill !== prevProps.fill) {\n        this.updateFill();\n      }\n    }\n  }, {\n    key: \"getColor\",\n    value: function getColor() {}\n  }, {\n    key: \"randomizeData\",\n    value: function randomizeData() {\n      var randomXKey = function randomXKey() {\n        return _.random(50, 300);\n      };\n\n      var data = [{\n        sortKey: randomXKey(),\n        yKey: 'A',\n        xKey: randomXKey()\n      }, {\n        sortKey: randomXKey(),\n        yKey: 'B',\n        xKey: randomXKey()\n      }, {\n        sortKey: randomXKey(),\n        yKey: 'C',\n        xKey: randomXKey()\n      }];\n      this.updateVis(data.sort(function (a, b) {\n        return a.sortKey - b.sortKey;\n      }), this.getColor());\n    }\n  }, {\n    key: \"initVis\",\n    value: function initVis() {\n      var _this2 = this;\n\n      var svg = select(this.svg);\n      var data = this.state.data;\n      svg.attr('height', 40).attr('width', 40);\n      svg.append('g').attr('class', 'chart-area').attr('transform', \"translate(0,7)\");\n      this.yScale = scaleBand().range([0, 30]).domain(data.map(function (d) {\n        return d.yKey;\n      })).padding(.3);\n      this.xScale = scaleLinear().range([0, 35]).domain([0, 300]);\n      this.chartArea = svg.select('.chart-area');\n      this.chartArea.append('line').attr('x1', 0).attr('x2', 0).attr('y1', 0).attr('y2', 30).attr('stroke', this.props.fill).attr('stroke-width', 1).attr(\"stroke-linejoin\", \"round\").attr(\"stroke-linecap\", \"round\");\n      var rects = this.chartArea.selectAll('rect').data(data, function (d) {\n        return d.yKey;\n      });\n      rects.enter().append('rect').attr('x', this.xScale(0)).attr('y', function (d) {\n        return _this2.yScale(d.yKey);\n      }).attr('height', this.yScale.bandwidth()).attr('width', this.xScale(0)).attr('fill', this.props.fill).merge(rects).transition('in').duration(1000).delay(function (_, i) {\n        return i * 250;\n      }).attr('width', function (d) {\n        return _this2.xScale(d.xKey);\n      });\n    }\n  }, {\n    key: \"updateVis\",\n    value: function updateVis(data) {\n      var _this3 = this;\n\n      this.yScale.domain(data.map(function (d) {\n        return d.yKey;\n      }));\n      this.chartArea.selectAll('rect').data(data, function (d) {\n        return d.yKey;\n      }).transition('update-width').delay(function (d) {\n        return d.sortKey;\n      }).duration(1000).attr('width', function (d) {\n        return _this3.xScale(d.xKey);\n      }).attr('fill', this.props.fill);\n    }\n  }, {\n    key: \"updateFill\",\n    value: function updateFill() {\n      this.chartArea.selectAll('rect').attr('fill', this.props.fill);\n      this.chartArea.select('line').attr('stroke', this.props.fill);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return __jsx(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, __jsx(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, __jsx(\"svg\", {\n        ref: function ref(svg) {\n          return _this4.svg = svg;\n        },\n        onClick: function onClick() {\n          return _this4.randomizeData();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return IconChart;\n}(Component);\n\nexport default IconChart;","map":{"version":3,"sources":["/Users/andrasszesztai/Desktop/boring-barchart-nextjs/components/IconChart/IconChart.jsx"],"names":["React","Component","styled","_","select","scaleBand","scaleLinear","Link","Wrapper","div","IconChart","props","state","location","data","sortKey","yKey","xKey","initVis","prevProps","randomizeData","fill","updateFill","randomXKey","random","updateVis","sort","a","b","getColor","svg","attr","append","yScale","range","domain","map","d","padding","xScale","chartArea","rects","selectAll","enter","bandwidth","merge","transition","duration","delay","i"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,UAAvC;AACA,OAAO,eAAP;AAEA,SAASC,IAAT,QAAqB,kBAArB;AAGA,IAAMC,OAAO,GAAGN,MAAM,CAACO,GAAV;AAAA;AAAA;AAAA,4BAAb;;IAQMC,S;;;;;AACF,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,MAAKF,KAAL,CAAWE,QADZ;AAETC,MAAAA,IAAI,EAAE,CAAE;AAAEC,QAAAA,OAAO,EAAE,CAAX;AAAcC,QAAAA,IAAI,EAAE,GAApB;AAAyBC,QAAAA,IAAI,EAAE;AAA/B,OAAF,EACE;AAAEF,QAAAA,OAAO,EAAE,CAAX;AAAcC,QAAAA,IAAI,EAAE,GAApB;AAAyBC,QAAAA,IAAI,EAAE;AAA/B,OADF,EAEE;AAAEF,QAAAA,OAAO,EAAE,CAAX;AAAcC,QAAAA,IAAI,EAAE,GAApB;AAAyBC,QAAAA,IAAI,EAAE;AAA/B,OAFF;AAFG,KAAb;AAFe;AAQlB;;;;wCAEmB;AAEhB,WAAKC,OAAL;AAEH;;;uCAEkBC,S,EAAW;AAE1B,UAAGA,SAAS,CAACN,QAAV,KAAuB,KAAKF,KAAL,CAAWE,QAArC,EAA8C;AAE3C,aAAKO,aAAL;AAEF;;AAED,UAAG,KAAKT,KAAL,CAAWU,IAAX,KAAoBF,SAAS,CAACE,IAAjC,EAAsC;AAClC,aAAKC,UAAL;AACH;AAEJ;;;+BAES,CAET;;;oCAEc;AAEX,UAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,eAAMpB,CAAC,CAACqB,MAAF,CAAS,EAAT,EAAa,GAAb,CAAN;AAAA,OAAnB;;AAGA,UAAMV,IAAI,GAAE,CAAE;AAAEC,QAAAA,OAAO,EAAEQ,UAAU,EAArB;AAAyBP,QAAAA,IAAI,EAAE,GAA/B;AAAoCC,QAAAA,IAAI,EAAEM,UAAU;AAApD,OAAF,EACC;AAAER,QAAAA,OAAO,EAAEQ,UAAU,EAArB;AAAyBP,QAAAA,IAAI,EAAE,GAA/B;AAAoCC,QAAAA,IAAI,EAAEM,UAAU;AAApD,OADD,EAEC;AAAER,QAAAA,OAAO,EAAEQ,UAAU,EAArB;AAAyBP,QAAAA,IAAI,EAAE,GAA/B;AAAoCC,QAAAA,IAAI,EAAEM,UAAU;AAApD,OAFD,CAAZ;AAIC,WAAKE,SAAL,CAAeX,IAAI,CAACY,IAAL,CAAU,UAACC,CAAD,EAAGC,CAAH;AAAA,eAASD,CAAC,CAACZ,OAAF,GAAYa,CAAC,CAACb,OAAvB;AAAA,OAAV,CAAf,EAA0D,KAAKc,QAAL,EAA1D;AACJ;;;8BAEQ;AAAA;;AAEL,UAAMC,GAAG,GAAG1B,MAAM,CAAC,KAAK0B,GAAN,CAAlB;AAFK,UAGGhB,IAHH,GAGY,KAAKF,KAHjB,CAGGE,IAHH;AAILgB,MAAAA,GAAG,CAACC,IAAJ,CAAS,QAAT,EAAmB,EAAnB,EAAuBA,IAAvB,CAA4B,OAA5B,EAAqC,EAArC;AACAD,MAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB,OAArB,EAA8B,YAA9B,EAA4CA,IAA5C,CAAiD,WAAjD;AAEA,WAAKE,MAAL,GAAc5B,SAAS,GAAG6B,KAAZ,CAAkB,CAAC,CAAD,EAAI,EAAJ,CAAlB,EAA2BC,MAA3B,CAAkCrB,IAAI,CAACsB,GAAL,CAAS,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACrB,IAAN;AAAA,OAAV,CAAlC,EAAyDsB,OAAzD,CAAiE,EAAjE,CAAd;AACA,WAAKC,MAAL,GAAcjC,WAAW,GAAG4B,KAAd,CAAoB,CAAC,CAAD,EAAI,EAAJ,CAApB,EAA6BC,MAA7B,CAAoC,CAAC,CAAD,EAAI,GAAJ,CAApC,CAAd;AACA,WAAKK,SAAL,GAAiBV,GAAG,CAAC1B,MAAJ,CAAW,aAAX,CAAjB;AAEA,WAAKoC,SAAL,CAAeR,MAAf,CAAsB,MAAtB,EACKD,IADL,CACU,IADV,EACgB,CADhB,EAEKA,IAFL,CAEU,IAFV,EAEgB,CAFhB,EAGKA,IAHL,CAGU,IAHV,EAGgB,CAHhB,EAIKA,IAJL,CAIU,IAJV,EAIgB,EAJhB,EAKKA,IALL,CAKU,QALV,EAKoB,KAAKpB,KAAL,CAAWU,IAL/B,EAMKU,IANL,CAMU,cANV,EAM0B,CAN1B,EAOKA,IAPL,CAOU,iBAPV,EAO6B,OAP7B,EAQKA,IARL,CAQU,gBARV,EAQ4B,OAR5B;AAUA,UAAMU,KAAK,GAAG,KAAKD,SAAL,CAAeE,SAAf,CAAyB,MAAzB,EAAiC5B,IAAjC,CAAsCA,IAAtC,EAA4C,UAAAuB,CAAC;AAAA,eAAIA,CAAC,CAACrB,IAAN;AAAA,OAA7C,CAAd;AAEAyB,MAAAA,KAAK,CACAE,KADL,GAEKX,MAFL,CAEY,MAFZ,EAGKD,IAHL,CAGU,GAHV,EAGe,KAAKQ,MAAL,CAAY,CAAZ,CAHf,EAIKR,IAJL,CAIU,GAJV,EAIe,UAAAM,CAAC;AAAA,eAAI,MAAI,CAACJ,MAAL,CAAYI,CAAC,CAACrB,IAAd,CAAJ;AAAA,OAJhB,EAKKe,IALL,CAKU,QALV,EAKoB,KAAKE,MAAL,CAAYW,SAAZ,EALpB,EAMKb,IANL,CAMU,OANV,EAMmB,KAAKQ,MAAL,CAAY,CAAZ,CANnB,EAOKR,IAPL,CAOU,MAPV,EAOkB,KAAKpB,KAAL,CAAWU,IAP7B,EAQSwB,KART,CAQeJ,KARf,EASSK,UATT,CASoB,IATpB,EAUSC,QAVT,CAUkB,IAVlB,EAWSC,KAXT,CAWe,UAAC7C,CAAD,EAAI8C,CAAJ;AAAA,eAAUA,CAAC,GAAG,GAAd;AAAA,OAXf,EAYSlB,IAZT,CAYc,OAZd,EAYuB,UAAAM,CAAC;AAAA,eAAI,MAAI,CAACE,MAAL,CAAYF,CAAC,CAACpB,IAAd,CAAJ;AAAA,OAZxB;AAeH;;;8BAESH,I,EAAK;AAAA;;AAEX,WAAKmB,MAAL,CAAYE,MAAZ,CAAmBrB,IAAI,CAACsB,GAAL,CAAS,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACrB,IAAN;AAAA,OAAV,CAAnB;AAEA,WAAKwB,SAAL,CAAeE,SAAf,CAAyB,MAAzB,EAAiC5B,IAAjC,CAAsCA,IAAtC,EAA4C,UAAAuB,CAAC;AAAA,eAAIA,CAAC,CAACrB,IAAN;AAAA,OAA7C,EACS8B,UADT,CACoB,cADpB,EAESE,KAFT,CAEe,UAAAX,CAAC;AAAA,eAAIA,CAAC,CAACtB,OAAN;AAAA,OAFhB,EAGSgC,QAHT,CAGkB,IAHlB,EAIShB,IAJT,CAIc,OAJd,EAIuB,UAAAM,CAAC;AAAA,eAAI,MAAI,CAACE,MAAL,CAAYF,CAAC,CAACpB,IAAd,CAAJ;AAAA,OAJxB,EAKSc,IALT,CAKc,MALd,EAKsB,KAAKpB,KAAL,CAAWU,IALjC;AAOH;;;iCAEW;AACR,WAAKmB,SAAL,CAAeE,SAAf,CAAyB,MAAzB,EACKX,IADL,CACU,MADV,EACkB,KAAKpB,KAAL,CAAWU,IAD7B;AAGA,WAAKmB,SAAL,CAAepC,MAAf,CAAsB,MAAtB,EACK2B,IADL,CACU,QADV,EACoB,KAAKpB,KAAL,CAAWU,IAD/B;AAEH;;;6BAGQ;AAAA;;AACL,aACI,MAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAE,aAAAS,GAAG;AAAA,iBAAI,MAAI,CAACA,GAAL,GAAWA,GAAf;AAAA,SAAb;AAAiC,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACV,aAAL,EAAN;AAAA,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ;AAOH;;;;EArHmBnB,S;;AAwHxB,eAAeS,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components'\nimport _ from 'lodash'\nimport { select } from 'd3-selection'\nimport { scaleBand, scaleLinear } from 'd3-scale'\nimport 'd3-transition'\n\nimport { Link } from 'react-router-dom';\n\n\nconst Wrapper = styled.div`\n\n    svg {\n        cursor: pointer;\n    }\n\n`\n\nclass IconChart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            location: this.props.location,\n            data: [ { sortKey: 0, yKey: 'A', xKey: 250 }, \n                    { sortKey: 1, yKey: 'B', xKey: 300 }, \n                    { sortKey: 2, yKey: 'C', xKey: 200 }]\n         }\n    }\n\n    componentDidMount() {\n\n        this.initVis()\n\n    }\n\n    componentDidUpdate(prevProps) {\n\n        if(prevProps.location !== this.props.location){\n\n           this.randomizeData()\n\n        }\n\n        if(this.props.fill !== prevProps.fill){\n            this.updateFill()\n        }\n\n    }\n\n    getColor(){\n        \n    }\n\n    randomizeData(){\n\n        const randomXKey = () => _.random(50, 300)\n\n\n        const data= [ { sortKey: randomXKey(), yKey: 'A', xKey: randomXKey() }, \n                     { sortKey: randomXKey(), yKey: 'B', xKey: randomXKey() }, \n                     { sortKey: randomXKey(), yKey: 'C', xKey: randomXKey() }]\n         \n         this.updateVis(data.sort((a,b) => a.sortKey - b.sortKey), this.getColor())\n    }\n\n    initVis(){\n\n        const svg = select(this.svg)\n        const { data } = this.state\n        svg.attr('height', 40).attr('width', 40)\n        svg.append('g').attr('class', 'chart-area').attr('transform', `translate(0,7)`)\n\n        this.yScale = scaleBand().range([0, 30]).domain(data.map(d => d.yKey)).padding(.3)\n        this.xScale = scaleLinear().range([0, 35]).domain([0, 300])\n        this.chartArea = svg.select('.chart-area')\n\n        this.chartArea.append('line')\n            .attr('x1', 0)\n            .attr('x2', 0)\n            .attr('y1', 0)\n            .attr('y2', 30)\n            .attr('stroke', this.props.fill)\n            .attr('stroke-width', 1)\n            .attr(\"stroke-linejoin\", \"round\")\n            .attr(\"stroke-linecap\", \"round\")\n\n        const rects = this.chartArea.selectAll('rect').data(data, d => d.yKey)\n\n        rects\n            .enter()\n            .append('rect')\n            .attr('x', this.xScale(0))\n            .attr('y', d => this.yScale(d.yKey))\n            .attr('height', this.yScale.bandwidth())\n            .attr('width', this.xScale(0))\n            .attr('fill', this.props.fill)\n                .merge(rects)\n                .transition('in')\n                .duration(1000)\n                .delay((_, i) => i * 250)\n                .attr('width', d => this.xScale(d.xKey))\n\n\n    }\n\n    updateVis(data){\n\n        this.yScale.domain(data.map(d => d.yKey))\n\n        this.chartArea.selectAll('rect').data(data, d => d.yKey)\n                .transition('update-width')\n                .delay(d => d.sortKey)\n                .duration(1000)\n                .attr('width', d => this.xScale(d.xKey))\n                .attr('fill', this.props.fill)\n\n    }\n\n    updateFill(){\n        this.chartArea.selectAll('rect')\n            .attr('fill', this.props.fill)\n    \n        this.chartArea.select('line')\n            .attr('stroke', this.props.fill)\n    }\n\n\n    render() { \n        return ( \n            <Link to=\"/\">\n                <Wrapper >\n                    <svg ref={svg => this.svg = svg} onClick={() => this.randomizeData()}/>\n                </Wrapper>\n            </Link>\n         );\n    }\n}\n \nexport default IconChart;"]},"metadata":{},"sourceType":"module"}