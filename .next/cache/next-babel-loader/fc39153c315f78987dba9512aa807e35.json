{"ast":null,"code":"import _Set from \"@babel/runtime-corejs2/core-js/set\";\nimport { createSelector } from 'reselect';\n\nconst selectFurnitureList = state => state.furnitureBankReducer.productList;\n\nconst selectedAllSelected = state => state.furnitureBankReducer.selectedItems;\n\nconst selectAllDonation = state => state.furnitureBankReducer.donationsData;\n\nconst selectAllFamily = state => state.furnitureBankReducer.familyData; //* Array of all selected items\n\n\nexport const selectAllSelected = createSelector(selectedAllSelected, selectedList => selectedList.map(el => el.name));\nexport const selectTotalQuantity = createSelector(selectedAllSelected, selectedList => selectedList.reduce((acc, curr) => acc + curr.quantity, 0));\nexport const selectAllUnselected = createSelector(selectFurnitureList, selectAllSelected, (totalList, allSelected) => totalList.filter(el => !allSelected.includes(el.product_name))); //* Get relevant postal code list\n\nexport const selectFilteredDonationPostalCode = createSelector(selectAllDonation, selectAllSelected, (donations, selectedItems) => [...new _Set(donations.filter(el => selectedItems.includes(el.product_name)).map(el => el.postal_code))]); //* Get family data for postal codes\n\nexport const selectFilteredFamilies = createSelector(selectAllFamily, selectFilteredDonationPostalCode, (families, selectedPostalCodes) => families.filter(el => selectedPostalCodes.includes(el.postal_code)));","map":{"version":3,"sources":["/Users/andrasszesztai/Desktop/boring-barchart-nextjs/store/furnitureBankReducer/selectors.js"],"names":["createSelector","selectFurnitureList","state","furnitureBankReducer","productList","selectedAllSelected","selectedItems","selectAllDonation","donationsData","selectAllFamily","familyData","selectAllSelected","selectedList","map","el","name","selectTotalQuantity","reduce","acc","curr","quantity","selectAllUnselected","totalList","allSelected","filter","includes","product_name","selectFilteredDonationPostalCode","donations","postal_code","selectFilteredFamilies","families","selectedPostalCodes"],"mappings":";AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,mBAAmB,GAAGC,KAAK,IAAIA,KAAK,CAACC,oBAAN,CAA2BC,WAAhE;;AACA,MAAMC,mBAAmB,GAAGH,KAAK,IAAIA,KAAK,CAACC,oBAAN,CAA2BG,aAAhE;;AACA,MAAMC,iBAAiB,GAAGL,KAAK,IAAIA,KAAK,CAACC,oBAAN,CAA2BK,aAA9D;;AACA,MAAMC,eAAe,GAAGP,KAAK,IAAIA,KAAK,CAACC,oBAAN,CAA2BO,UAA5D,C,CAEA;;;AACA,OAAO,MAAMC,iBAAiB,GAAGX,cAAc,CAC7CK,mBAD6C,EAE7CO,YAAY,IAAIA,YAAY,CAACC,GAAb,CAAiBC,EAAE,IAAIA,EAAE,CAACC,IAA1B,CAF6B,CAAxC;AAKP,OAAO,MAAMC,mBAAmB,GAAGhB,cAAc,CAC/CK,mBAD+C,EAE/CO,YAAY,IAAIA,YAAY,CAACK,MAAb,CAAqB,CAACC,GAAD,EAAMC,IAAN,KAAeD,GAAG,GAAGC,IAAI,CAACC,QAA/C,EAA0D,CAA1D,CAF+B,CAA1C;AAKP,OAAO,MAAMC,mBAAmB,GAAGrB,cAAc,CAC/CC,mBAD+C,EAE/CU,iBAF+C,EAG/C,CAAEW,SAAF,EAAaC,WAAb,KAA8BD,SAAS,CAACE,MAAV,CAAiBV,EAAE,IAAI,CAACS,WAAW,CAACE,QAAZ,CAAqBX,EAAE,CAACY,YAAxB,CAAxB,CAHiB,CAA1C,C,CAMP;;AACA,OAAO,MAAMC,gCAAgC,GAAG3B,cAAc,CAC5DO,iBAD4D,EAE5DI,iBAF4D,EAG5D,CAACiB,SAAD,EAAYtB,aAAZ,KACE,CAAC,GAAG,SAAQsB,SAAS,CAACJ,MAAV,CAAiBV,EAAE,IAAIR,aAAa,CAACmB,QAAd,CAAuBX,EAAE,CAACY,YAA1B,CAAvB,EAAgEb,GAAhE,CAAoEC,EAAE,IAAIA,EAAE,CAACe,WAA7E,CAAR,CAAJ,CAJ0D,CAAvD,C,CAOP;;AACA,OAAO,MAAMC,sBAAsB,GAAG9B,cAAc,CAClDS,eADkD,EAElDkB,gCAFkD,EAGlD,CAACI,QAAD,EAAWC,mBAAX,KAAmCD,QAAQ,CAACP,MAAT,CAAgBV,EAAE,IAAIkB,mBAAmB,CAACP,QAApB,CAA6BX,EAAE,CAACe,WAAhC,CAAtB,CAHe,CAA7C","sourcesContent":["import { createSelector } from 'reselect'\n\nconst selectFurnitureList = state => state.furnitureBankReducer.productList\nconst selectedAllSelected = state => state.furnitureBankReducer.selectedItems\nconst selectAllDonation = state => state.furnitureBankReducer.donationsData\nconst selectAllFamily = state => state.furnitureBankReducer.familyData\n\n//* Array of all selected items\nexport const selectAllSelected = createSelector(\n  selectedAllSelected,\n  selectedList => selectedList.map(el => el.name)\n)\n\nexport const selectTotalQuantity = createSelector(\n  selectedAllSelected,\n  selectedList => selectedList.reduce(((acc, curr) => acc + curr.quantity), 0)\n)\n\nexport const selectAllUnselected = createSelector(\n  selectFurnitureList,\n  selectAllSelected,\n  ( totalList, allSelected ) => totalList.filter(el => !allSelected.includes(el.product_name))\n)\n\n//* Get relevant postal code list\nexport const selectFilteredDonationPostalCode = createSelector(\n  selectAllDonation,\n  selectAllSelected,\n  (donations, selectedItems) => \n    [...new Set(donations.filter(el => selectedItems.includes(el.product_name)).map(el => el.postal_code))]\n)\n\n//* Get family data for postal codes\nexport const selectFilteredFamilies = createSelector(\n  selectAllFamily,\n  selectFilteredDonationPostalCode,\n  (families, selectedPostalCodes) => families.filter(el => selectedPostalCodes.includes(el.postal_code))\n)\n\n\n\n"]},"metadata":{},"sourceType":"module"}