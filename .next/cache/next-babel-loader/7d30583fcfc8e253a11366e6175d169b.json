{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/andrasszesztai/Desktop/boring-barchart-nextjs/components/ConvertedNumber/index.jsx\";\nvar __jsx = React.createElement;\nimport { format } from 'd3-format';\nimport React, { useState } from 'react';\nimport CountUp from \"react-countup\";\nimport styled, { keyframes, css } from 'styled-components';\nexport const getFormattedNumber = ({\n  val,\n  perc,\n  expPlus\n}) => {\n  let formatKey;\n\n  if (perc) {\n    if (expPlus) {\n      if (-.1 < val && val < .1) {\n        formatKey = '+.2%';\n      } else {\n        formatKey = '+.1%';\n      }\n    } else {\n      if (-.1 < val && val < .1) {\n        formatKey = '.2%';\n      } else {\n        formatKey = '.1%';\n      }\n    }\n  } else {\n    if (expPlus) {\n      if (-1 < val && val < 1) {\n        formatKey = '+.2f';\n      } else {\n        formatKey = '+.3s';\n      }\n    } else {\n      if (-1 < val && val < 1) {\n        formatKey = '.2f';\n      } else {\n        formatKey = '.3s';\n      }\n    }\n  }\n\n  return val ? format(formatKey)(val).replace(/([a-zA-Z%])/g, \"\") : '-';\n};\nexport const getSuffix = ({\n  val,\n  custom,\n  perc\n}) => {\n  if (val === undefined) {\n    return '';\n  }\n\n  if (custom) {\n    return custom;\n  }\n\n  if (perc) {\n    return \"%\";\n  }\n\n  if (val < 1000) {\n    return '';\n  }\n\n  if (1000 <= val && val < 1000000) {\n    return 'K';\n  }\n\n  if (1000000 <= val && val < 1000000000) {\n    return 'M';\n  }\n\n  if (1000000000 <= val) {\n    return 'B';\n  }\n};\nconst styles = {\n  sizes: {\n    xSmall: .75,\n    small: .85,\n    medium: 1,\n    large: 1.15,\n    xLarge: 1.5,\n    xXLarge: 2,\n    cell: .875\n  },\n  weights: {\n    thin: 300,\n    book: 400,\n    medium: 500,\n    bold: 700\n  }\n};\nconst fadein = keyframes([\"from{opacity:0;}to{opacity:1;}\"]);\nconst Container = styled.span.withConfig({\n  displayName: \"ConvertedNumber__Container\",\n  componentId: \"jdjwlc-0\"\n})([\"\", \" \", \" font-weight:\", \";\", \"\"], props => props.isInitalized && css([\"animation:\", \" 2s;\"], fadein), props => styles.sizes[props.size] ? css([\"font-size:\", \"rem;\"], styles.sizes[props.size]) : css([\"font-size:\", \"rem;\"], props.size), props => styles.weights[props.weight] || props.weight, props => props.smallSuffix && css([\".suffix{font-size:\", \";margin-left:3px;}\"], props.suffixSize ? `${props.suffixSize}rem` : `${styles.sizes.medium}rem`));\n\nconst ConvertedNumber = ({\n  data,\n  perc,\n  prefix,\n  weight = 'book',\n  size = 'medium',\n  customSuffix,\n  animate,\n  smallSuffix,\n  expPlus,\n  period,\n  suffixSize,\n  suffixSpace\n}) => {\n  const {\n    0: isInitalized,\n    1: setIsInitalized\n  } = useState(false);\n  const styles = {\n    weight,\n    size,\n    smallSuffix,\n    suffixSize\n  };\n  if (data === undefined) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  });\n  const suffix = getSuffix({\n    val: data,\n    custom: customSuffix,\n    perc\n  });\n  return __jsx(React.Fragment, null, __jsx(Container, _extends({}, styles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), prefix, animate ? __jsx(CountUp, {\n    end: data,\n    decimals: 3,\n    preserveValue: true,\n    formattingFn: val => getFormattedNumber({\n      val,\n      perc,\n      expPlus\n    }),\n    onEnd: () => !isInitalized && setIsInitalized(true),\n    duration: 2,\n    decimal: \".\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }) : getFormattedNumber({\n    val: data,\n    perc,\n    expPlus\n  }), suffix && __jsx(\"span\", {\n    className: \"suffix\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, suffixSpace && ' ', suffix), period && __jsx(\"span\", {\n    className: \"period\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, ' ', period)));\n};\n\nexport default ConvertedNumber;","map":{"version":3,"sources":["/Users/andrasszesztai/Desktop/boring-barchart-nextjs/components/ConvertedNumber/index.jsx"],"names":["format","React","useState","CountUp","styled","keyframes","css","getFormattedNumber","val","perc","expPlus","formatKey","replace","getSuffix","custom","undefined","styles","sizes","xSmall","small","medium","large","xLarge","xXLarge","cell","weights","thin","book","bold","fadein","Container","span","props","isInitalized","size","weight","smallSuffix","suffixSize","ConvertedNumber","data","prefix","customSuffix","animate","period","suffixSpace","setIsInitalized","suffix"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,WAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,MAAP,IAAiBC,SAAjB,EAA4BC,GAA5B,QAAuC,mBAAvC;AAEA,OAAO,MAAMC,kBAAkB,GAAG,CAAC;AAACC,EAAAA,GAAD;AAAMC,EAAAA,IAAN;AAAYC,EAAAA;AAAZ,CAAD,KAA0B;AAC1D,MAAIC,SAAJ;;AACA,MAAGF,IAAH,EAAQ;AACN,QAAGC,OAAH,EAAW;AACT,UAAI,CAAC,EAAD,GAAMF,GAAN,IAAaA,GAAG,GAAG,EAAvB,EAA4B;AAACG,QAAAA,SAAS,GAAG,MAAZ;AAAmB,OAAhD,MAAsD;AAACA,QAAAA,SAAS,GAAG,MAAZ;AAAmB;AAC3E,KAFD,MAEO;AACL,UAAI,CAAC,EAAD,GAAMH,GAAN,IAAaA,GAAG,GAAG,EAAvB,EAA2B;AAACG,QAAAA,SAAS,GAAG,KAAZ;AAAkB,OAA9C,MAAoD;AAACA,QAAAA,SAAS,GAAG,KAAZ;AAAkB;AACxE;AACF,GAND,MAMO;AACL,QAAGD,OAAH,EAAW;AACT,UAAI,CAAC,CAAD,GAAKF,GAAL,IAAYA,GAAG,GAAG,CAAtB,EAA0B;AAAEG,QAAAA,SAAS,GAAG,MAAZ;AAAoB,OAAhD,MAAoD;AAAEA,QAAAA,SAAS,GAAG,MAAZ;AAAmB;AAC1E,KAFD,MAEO;AACL,UAAI,CAAC,CAAD,GAAKH,GAAL,IAAYA,GAAG,GAAG,CAAtB,EAA0B;AAAEG,QAAAA,SAAS,GAAG,KAAZ;AAAmB,OAA/C,MAAmD;AAAEA,QAAAA,SAAS,GAAG,KAAZ;AAAkB;AACxE;AACF;;AACD,SAAOH,GAAG,GAAGR,MAAM,CAACW,SAAD,CAAN,CAAkBH,GAAlB,EAAuBI,OAAvB,CAA+B,cAA/B,EAA+C,EAA/C,CAAH,GAAwD,GAAlE;AACD,CAhBM;AAkBP,OAAO,MAAMC,SAAS,GAAG,CAAC;AAACL,EAAAA,GAAD;AAAMM,EAAAA,MAAN;AAAcL,EAAAA;AAAd,CAAD,KAAyB;AAChD,MAAGD,GAAG,KAAKO,SAAX,EAAqB;AAAC,WAAO,EAAP;AAAU;;AAChC,MAAGD,MAAH,EAAU;AAAC,WAAOA,MAAP;AAAc;;AACzB,MAAGL,IAAH,EAAQ;AAAC,WAAO,GAAP;AAAW;;AACpB,MAAGD,GAAG,GAAG,IAAT,EAAc;AAAC,WAAO,EAAP;AAAU;;AACzB,MAAG,QAAQA,GAAR,IAAeA,GAAG,GAAG,OAAxB,EAAgC;AAAC,WAAO,GAAP;AAAW;;AAC5C,MAAG,WAAWA,GAAX,IAAkBA,GAAG,GAAG,UAA3B,EAAsC;AAAC,WAAQ,GAAR;AAAY;;AACnD,MAAG,cAAcA,GAAjB,EAAqB;AAAC,WAAO,GAAP;AAAW;AAClC,CARM;AAUP,MAAMQ,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAG;AACNC,IAAAA,MAAM,EAAE,GADF;AAENC,IAAAA,KAAK,EAAE,GAFD;AAGNC,IAAAA,MAAM,EAAE,CAHF;AAINC,IAAAA,KAAK,EAAE,IAJD;AAKNC,IAAAA,MAAM,EAAE,GALF;AAMNC,IAAAA,OAAO,EAAE,CANH;AAONC,IAAAA,IAAI,EAAE;AAPA,GADK;AAUbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE,GADC;AAEPC,IAAAA,IAAI,EAAE,GAFC;AAGPP,IAAAA,MAAM,EAAE,GAHD;AAIPQ,IAAAA,IAAI,EAAE;AAJC;AAVI,CAAf;AAkBA,MAAMC,MAAM,GAAGxB,SAAH,oCAAZ;AAKA,MAAMyB,SAAS,GAAG1B,MAAM,CAAC2B,IAAV;AAAA;AAAA;AAAA,wCACXC,KAAK,IAAIA,KAAK,CAACC,YAAN,IAAsB3B,GAAtB,yBACIuB,MADJ,CADE,EAIXG,KAAK,IAAIhB,MAAM,CAACC,KAAP,CAAae,KAAK,CAACE,IAAnB,IAA2B5B,GAA3B,yBACIU,MAAM,CAACC,KAAP,CAAae,KAAK,CAACE,IAAnB,CADJ,IAEP5B,GAFO,yBAGI0B,KAAK,CAACE,IAHV,CAJE,EASEF,KAAK,IAAIhB,MAAM,CAACS,OAAP,CAAeO,KAAK,CAACG,MAArB,KAAgCH,KAAK,CAACG,MATjD,EAUXH,KAAK,IAAIA,KAAK,CAACI,WAAN,IAAqB9B,GAArB,+CAEO0B,KAAK,CAACK,UAAN,GAAoB,GAAEL,KAAK,CAACK,UAAW,KAAvC,GAA+C,GAAErB,MAAM,CAACC,KAAP,CAAaG,MAAO,KAF5E,CAVE,CAAf;;AAkBA,MAAMkB,eAAe,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQ9B,EAAAA,IAAR;AAAc+B,EAAAA,MAAd;AAAsBL,EAAAA,MAAM,GAAC,MAA7B;AAAqCD,EAAAA,IAAI,GAAC,QAA1C;AAAoDO,EAAAA,YAApD;AAAkEC,EAAAA,OAAlE;AAA2EN,EAAAA,WAA3E;AAAwF1B,EAAAA,OAAxF;AAAiGiC,EAAAA,MAAjG;AAAyGN,EAAAA,UAAzG;AAAqHO,EAAAA;AAArH,CAAD,KAAwI;AAC9J,QAAM;AAAA,OAAEX,YAAF;AAAA,OAAgBY;AAAhB,MAAoC3C,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAMc,MAAM,GAAG;AAAEmB,IAAAA,MAAF;AAAUD,IAAAA,IAAV;AAAgBE,IAAAA,WAAhB;AAA6BC,IAAAA;AAA7B,GAAf;AACA,MAAIE,IAAI,KAAKxB,SAAb,EAAwB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACxB,QAAM+B,MAAM,GAAGjC,SAAS,CAAC;AAACL,IAAAA,GAAG,EAAE+B,IAAN;AAAYzB,IAAAA,MAAM,EAAE2B,YAApB;AAAkChC,IAAAA;AAAlC,GAAD,CAAxB;AACA,SACE,4BACE,MAAC,SAAD,eACMO,MADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAGGwB,MAHH,EAKIE,OAAO,GACP,MAAC,OAAD;AACE,IAAA,GAAG,EAAEH,IADP;AAEE,IAAA,QAAQ,EAAE,CAFZ;AAGE,IAAA,aAAa,MAHf;AAIE,IAAA,YAAY,EAAE/B,GAAG,IAAID,kBAAkB,CAAC;AAAEC,MAAAA,GAAF;AAAOC,MAAAA,IAAP;AAAaC,MAAAA;AAAb,KAAD,CAJzC;AAKE,IAAA,KAAK,EAAE,MAAM,CAACuB,YAAD,IAAiBY,eAAe,CAAC,IAAD,CAL/C;AAME,IAAA,QAAQ,EAAE,CANZ;AAOE,IAAA,OAAO,EAAC,GAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,GAUPtC,kBAAkB,CAAC;AAAEC,IAAAA,GAAG,EAAE+B,IAAP;AAAa9B,IAAAA,IAAb;AAAmBC,IAAAA;AAAnB,GAAD,CAftB,EAkBIoC,MAAM,IACN;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIF,WAAW,IACX,GAHJ,EAKGE,MALH,CAnBJ,EA4BIH,MAAM,IACN;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EACQA,MADR,CA7BJ,CADF,CADF;AAsCD,CA3CD;;AA6CA,eAAeL,eAAf","sourcesContent":["import { format } from 'd3-format'\nimport React, { useState } from 'react'\nimport CountUp from \"react-countup\";\nimport styled, { keyframes, css } from 'styled-components'\n\nexport const getFormattedNumber = ({val, perc, expPlus}) => {\n  let formatKey\n  if(perc){\n    if(expPlus){\n      if( -.1 < val && val < .1  ){formatKey = '+.2%'} else {formatKey = '+.1%'}\n    } else {\n      if( -.1 < val && val < .1 ){formatKey = '.2%'} else {formatKey = '.1%'}\n    }\n  } else {\n    if(expPlus){\n      if( -1 < val && val < 1  ){ formatKey = '+.2f' }else{ formatKey = '+.3s'}\n    } else {\n      if( -1 < val && val < 1  ){ formatKey = '.2f' }else{ formatKey = '.3s'}\n    }\n  }\n  return val ? format(formatKey)(val).replace(/([a-zA-Z%])/g, \"\") : '-'\n}\n\nexport const getSuffix = ({val, custom, perc}) => {\n  if(val === undefined){return ''}\n  if(custom){return custom}\n  if(perc){return \"%\"}\n  if(val < 1000){return ''}\n  if(1000 <= val && val < 1000000){return 'K'}\n  if(1000000 <= val && val < 1000000000){return  'M'}\n  if(1000000000 <= val){return 'B'}\n}\n\nconst styles = {\n  sizes : {\n    xSmall: .75,\n    small: .85,\n    medium: 1,\n    large: 1.15,\n    xLarge: 1.5,\n    xXLarge: 2,\n    cell: .875\n  },\n  weights: {\n    thin: 300,\n    book: 400,\n    medium: 500,\n    bold: 700\n  }\n}\n\nconst fadein = keyframes`\n    from { opacity: 0; }\n    to   { opacity: 1; }\n`;\n\nconst Container = styled.span`\n  ${props => props.isInitalized && css`\n    animation: ${fadein} 2s;\n  `}\n  ${props => styles.sizes[props.size] ? css`\n    font-size: ${styles.sizes[props.size]}rem;\n  ` : css`\n    font-size: ${props.size}rem;\n  `}\n  font-weight: ${props => styles.weights[props.weight] || props.weight};\n  ${props => props.smallSuffix && css`\n    .suffix {\n      font-size: ${ props.suffixSize ? `${props.suffixSize}rem` : `${styles.sizes.medium}rem`};\n      margin-left: 3px;\n    }\n  `}\n`\n\nconst ConvertedNumber = ({ data, perc, prefix, weight='book', size='medium', customSuffix, animate, smallSuffix, expPlus, period, suffixSize, suffixSpace }) => {\n  const [ isInitalized, setIsInitalized ] = useState(false)\n  const styles = { weight, size, smallSuffix, suffixSize }\n  if (data === undefined) return <div></div>\n  const suffix = getSuffix({val: data, custom: customSuffix, perc})\n  return (\n    <>\n      <Container\n        {...styles}\n      >\n        {prefix}\n        {\n          animate ?\n          <CountUp\n            end={data}\n            decimals={3}\n            preserveValue\n            formattingFn={val => getFormattedNumber({ val, perc, expPlus })}\n            onEnd={() => !isInitalized && setIsInitalized(true)}\n            duration={2}\n            decimal=\".\"\n          /> :\n          getFormattedNumber({ val: data, perc, expPlus})\n        }\n        {\n          suffix &&\n          <span className=\"suffix\">\n            {\n              suffixSpace &&\n              ' '\n            }\n            {suffix}\n          </span>\n        }\n        {\n          period &&\n          <span className=\"period\">\n            {' '}{period}\n          </span>\n        }\n      </Container>\n    </>\n  )\n}\n\nexport default ConvertedNumber\n"]},"metadata":{},"sourceType":"module"}