{"ast":null,"code":"import { createSelector } from \"reselect\";\n\nconst selectFurnitureList = state => state.furnitureBankReducer.productList;\n\nconst selectedAllSelected = state => state.furnitureBankReducer.selectedItems;\n\nconst selectAllDonation = state => state.furnitureBankReducer.donationsData;\n\nconst selectAllFamily = state => state.furnitureBankReducer.familyData;\n\nconst selectAllCoordinates = state => state.furnitureBankReducer.coordinatesData; //* Array of all selected items\n\n\nexport const selectAllSelected = createSelector(selectedAllSelected, selectedList => selectedList.map(el => el.name));\nexport const selectTotalQuantity = createSelector(selectedAllSelected, selectedList => selectedList.reduce((acc, curr) => acc + curr.quantity, 0));\nexport const selectAllUnselected = createSelector(selectFurnitureList, selectAllSelected, (totalList, allSelected) => totalList.filter(el => !allSelected.map(el => el.toLowerCase()).includes(el.product_name.toLowerCase()))); //* Get relevant postal code list\n\nexport const selectFilteredDonationPostalCode = createSelector(selectAllDonation, selectAllSelected, (donations, selectedItems) => donations.filter(el => selectedItems.includes(el.product_name))); //* Get family data for postal codes\n\nexport const selectFilteredFamilies = createSelector(selectAllFamily, selectFilteredDonationPostalCode, (families, selectedPostalCodes) => families.filter(el => selectedPostalCodes.includes(el.postal_code))); //* Get cooordinates for singe postal codes\n\nexport const selectFilteredCoordinates = createSelector(selectAllCoordinates, selectFilteredDonationPostalCode, (coordinates, selectedPostalCodes) => coordinates.filter(el => selectedPostalCodes.includes(el.postal_code))); //* Get coordinates for all postal codes\n\nexport const selectFilteredDonationsCoordinates = createSelector();","map":{"version":3,"sources":["/Users/andrasszesztai/Desktop/boring-barchart-nextjs/store/furnitureBankReducer/selectors.js"],"names":["createSelector","selectFurnitureList","state","furnitureBankReducer","productList","selectedAllSelected","selectedItems","selectAllDonation","donationsData","selectAllFamily","familyData","selectAllCoordinates","coordinatesData","selectAllSelected","selectedList","map","el","name","selectTotalQuantity","reduce","acc","curr","quantity","selectAllUnselected","totalList","allSelected","filter","toLowerCase","includes","product_name","selectFilteredDonationPostalCode","donations","selectFilteredFamilies","families","selectedPostalCodes","postal_code","selectFilteredCoordinates","coordinates","selectFilteredDonationsCoordinates"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,mBAAmB,GAAGC,KAAK,IAAIA,KAAK,CAACC,oBAAN,CAA2BC,WAAhE;;AACA,MAAMC,mBAAmB,GAAGH,KAAK,IAAIA,KAAK,CAACC,oBAAN,CAA2BG,aAAhE;;AACA,MAAMC,iBAAiB,GAAGL,KAAK,IAAIA,KAAK,CAACC,oBAAN,CAA2BK,aAA9D;;AACA,MAAMC,eAAe,GAAGP,KAAK,IAAIA,KAAK,CAACC,oBAAN,CAA2BO,UAA5D;;AACA,MAAMC,oBAAoB,GAAGT,KAAK,IAChCA,KAAK,CAACC,oBAAN,CAA2BS,eAD7B,C,CAGA;;;AACA,OAAO,MAAMC,iBAAiB,GAAGb,cAAc,CAC7CK,mBAD6C,EAE7CS,YAAY,IAAIA,YAAY,CAACC,GAAb,CAAiBC,EAAE,IAAIA,EAAE,CAACC,IAA1B,CAF6B,CAAxC;AAKP,OAAO,MAAMC,mBAAmB,GAAGlB,cAAc,CAC/CK,mBAD+C,EAE/CS,YAAY,IAAIA,YAAY,CAACK,MAAb,CAAoB,CAACC,GAAD,EAAMC,IAAN,KAAeD,GAAG,GAAGC,IAAI,CAACC,QAA9C,EAAwD,CAAxD,CAF+B,CAA1C;AAKP,OAAO,MAAMC,mBAAmB,GAAGvB,cAAc,CAC/CC,mBAD+C,EAE/CY,iBAF+C,EAG/C,CAACW,SAAD,EAAYC,WAAZ,KACED,SAAS,CAACE,MAAV,CACEV,EAAE,IACA,CAACS,WAAW,CACTV,GADF,CACMC,EAAE,IAAIA,EAAE,CAACW,WAAH,EADZ,EAEEC,QAFF,CAEWZ,EAAE,CAACa,YAAH,CAAgBF,WAAhB,EAFX,CAFL,CAJ6C,CAA1C,C,CAYP;;AACA,OAAO,MAAMG,gCAAgC,GAAG9B,cAAc,CAC5DO,iBAD4D,EAE5DM,iBAF4D,EAG5D,CAACkB,SAAD,EAAYzB,aAAZ,KAA8ByB,SAAS,CAChCL,MADuB,CAChBV,EAAE,IAAIV,aAAa,CAACsB,QAAd,CAAuBZ,EAAE,CAACa,YAA1B,CADU,CAH8B,CAAvD,C,CAOP;;AACA,OAAO,MAAMG,sBAAsB,GAAGhC,cAAc,CAClDS,eADkD,EAElDqB,gCAFkD,EAGlD,CAACG,QAAD,EAAWC,mBAAX,KACED,QAAQ,CAACP,MAAT,CAAgBV,EAAE,IAAIkB,mBAAmB,CAACN,QAApB,CAA6BZ,EAAE,CAACmB,WAAhC,CAAtB,CAJgD,CAA7C,C,CAOP;;AACA,OAAO,MAAMC,yBAAyB,GAAGpC,cAAc,CACrDW,oBADqD,EAErDmB,gCAFqD,EAGrD,CAACO,WAAD,EAAcH,mBAAd,KACEG,WAAW,CACRX,MADH,CACUV,EAAE,IAAIkB,mBAAmB,CAACN,QAApB,CAA6BZ,EAAE,CAACmB,WAAhC,CADhB,CAJmD,CAAhD,C,CAQP;;AACA,OAAO,MAAMG,kCAAkC,GAAGtC,cAAc,EAAzD","sourcesContent":["import { createSelector } from \"reselect\";\n\nconst selectFurnitureList = state => state.furnitureBankReducer.productList;\nconst selectedAllSelected = state => state.furnitureBankReducer.selectedItems;\nconst selectAllDonation = state => state.furnitureBankReducer.donationsData;\nconst selectAllFamily = state => state.furnitureBankReducer.familyData;\nconst selectAllCoordinates = state =>\n  state.furnitureBankReducer.coordinatesData;\n\n//* Array of all selected items\nexport const selectAllSelected = createSelector(\n  selectedAllSelected,\n  selectedList => selectedList.map(el => el.name)\n);\n\nexport const selectTotalQuantity = createSelector(\n  selectedAllSelected,\n  selectedList => selectedList.reduce((acc, curr) => acc + curr.quantity, 0)\n);\n\nexport const selectAllUnselected = createSelector(\n  selectFurnitureList,\n  selectAllSelected,\n  (totalList, allSelected) =>\n    totalList.filter(\n      el =>\n        !allSelected\n          .map(el => el.toLowerCase())\n          .includes(el.product_name.toLowerCase())\n    )\n);\n\n//* Get relevant postal code list\nexport const selectFilteredDonationPostalCode = createSelector(\n  selectAllDonation,\n  selectAllSelected,\n  (donations, selectedItems) => donations\n        .filter(el => selectedItems.includes(el.product_name))\n);\n\n//* Get family data for postal codes\nexport const selectFilteredFamilies = createSelector(\n  selectAllFamily,\n  selectFilteredDonationPostalCode,\n  (families, selectedPostalCodes) =>\n    families.filter(el => selectedPostalCodes.includes(el.postal_code))\n);\n\n//* Get cooordinates for singe postal codes\nexport const selectFilteredCoordinates = createSelector(\n  selectAllCoordinates,\n  selectFilteredDonationPostalCode,\n  (coordinates, selectedPostalCodes) =>\n    coordinates\n      .filter(el => selectedPostalCodes.includes(el.postal_code))\n);\n\n//* Get coordinates for all postal codes\nexport const selectFilteredDonationsCoordinates = createSelector(\n\n)\n"]},"metadata":{},"sourceType":"module"}