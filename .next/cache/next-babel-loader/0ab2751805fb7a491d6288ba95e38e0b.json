{"ast":null,"code":"import _Set from \"@babel/runtime-corejs2/core-js/set\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport { createSelector } from 'reselect';\n\nvar selectFurnitureList = function selectFurnitureList(state) {\n  return state.furnitureBankReducer.productList;\n};\n\nvar selectedAllSelected = function selectedAllSelected(state) {\n  return state.furnitureBankReducer.selectedItems;\n};\n\nvar selectAllDonation = function selectAllDonation(state) {\n  return state.furnitureBankReducer.donationsData;\n};\n\nvar selectAllFamily = function selectAllFamily(state) {\n  return state.furnitureBankReducer.familyData;\n}; //* Array of all selected items\n\n\nexport var selectAllSelected = createSelector(selectedAllSelected, function (selectedList) {\n  return selectedList.map(function (el) {\n    return el.name;\n  });\n});\nexport var selectTotalQuantity = createSelector(selectedAllSelected, function (selectedList) {\n  return selectedList.reduce(function (acc, curr) {\n    return acc + curr.quantity;\n  }, 0);\n});\nexport var selectAllUnselected = createSelector(selectFurnitureList, selectAllSelected, function (totalList, allSelected) {\n  return totalList.filter(function (el) {\n    return !allSelected.includes(el.product_name);\n  });\n}); //* Get relevant postal code list\n\nexport var selectFilteredDonationPostalCode = createSelector(selectAllDonation, selectAllSelected, function (donations, selectedItems) {\n  return _toConsumableArray(new _Set(donations.filter(function (el) {\n    return selectedItems.includes(el.product_name);\n  }).map(function (el) {\n    return el.postal_code;\n  })));\n}); //* Get family data for postal codes\n\nexport var selectFilteredFamilies = createSelector(selectAllFamily, selectFilteredDonationPostalCode, function (families, selectedPostalCodes) {\n  return families.filter(function (el) {\n    return selectedPostalCodes.includes(el.postal_code);\n  });\n});","map":{"version":3,"sources":["/Users/andrasszesztai/Desktop/boring-barchart-nextjs/store/furnitureBankReducer/selectors.js"],"names":["createSelector","selectFurnitureList","state","furnitureBankReducer","productList","selectedAllSelected","selectedItems","selectAllDonation","donationsData","selectAllFamily","familyData","selectAllSelected","selectedList","map","el","name","selectTotalQuantity","reduce","acc","curr","quantity","selectAllUnselected","totalList","allSelected","filter","includes","product_name","selectFilteredDonationPostalCode","donations","postal_code","selectFilteredFamilies","families","selectedPostalCodes"],"mappings":";;AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,oBAAN,CAA2BC,WAA/B;AAAA,CAAjC;;AACA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAH,KAAK;AAAA,SAAIA,KAAK,CAACC,oBAAN,CAA2BG,aAA/B;AAAA,CAAjC;;AACA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAL,KAAK;AAAA,SAAIA,KAAK,CAACC,oBAAN,CAA2BK,aAA/B;AAAA,CAA/B;;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAP,KAAK;AAAA,SAAIA,KAAK,CAACC,oBAAN,CAA2BO,UAA/B;AAAA,CAA7B,C,CAEA;;;AACA,OAAO,IAAMC,iBAAiB,GAAGX,cAAc,CAC7CK,mBAD6C,EAE7C,UAAAO,YAAY;AAAA,SAAIA,YAAY,CAACC,GAAb,CAAiB,UAAAC,EAAE;AAAA,WAAIA,EAAE,CAACC,IAAP;AAAA,GAAnB,CAAJ;AAAA,CAFiC,CAAxC;AAKP,OAAO,IAAMC,mBAAmB,GAAGhB,cAAc,CAC/CK,mBAD+C,EAE/C,UAAAO,YAAY;AAAA,SAAIA,YAAY,CAACK,MAAb,CAAqB,UAACC,GAAD,EAAMC,IAAN;AAAA,WAAeD,GAAG,GAAGC,IAAI,CAACC,QAA1B;AAAA,GAArB,EAA0D,CAA1D,CAAJ;AAAA,CAFmC,CAA1C;AAKP,OAAO,IAAMC,mBAAmB,GAAGrB,cAAc,CAC/CC,mBAD+C,EAE/CU,iBAF+C,EAG/C,UAAEW,SAAF,EAAaC,WAAb;AAAA,SAA8BD,SAAS,CAACE,MAAV,CAAiB,UAAAV,EAAE;AAAA,WAAI,CAACS,WAAW,CAACE,QAAZ,CAAqBX,EAAE,CAACY,YAAxB,CAAL;AAAA,GAAnB,CAA9B;AAAA,CAH+C,CAA1C,C,CAMP;;AACA,OAAO,IAAMC,gCAAgC,GAAG3B,cAAc,CAC5DO,iBAD4D,EAE5DI,iBAF4D,EAG5D,UAACiB,SAAD,EAAYtB,aAAZ;AAAA,4BACM,SAAQsB,SAAS,CAACJ,MAAV,CAAiB,UAAAV,EAAE;AAAA,WAAIR,aAAa,CAACmB,QAAd,CAAuBX,EAAE,CAACY,YAA1B,CAAJ;AAAA,GAAnB,EAAgEb,GAAhE,CAAoE,UAAAC,EAAE;AAAA,WAAIA,EAAE,CAACe,WAAP;AAAA,GAAtE,CAAR,CADN;AAAA,CAH4D,CAAvD,C,CAOP;;AACA,OAAO,IAAMC,sBAAsB,GAAG9B,cAAc,CAClDS,eADkD,EAElDkB,gCAFkD,EAGlD,UAACI,QAAD,EAAWC,mBAAX;AAAA,SAAmCD,QAAQ,CAACP,MAAT,CAAgB,UAAAV,EAAE;AAAA,WAAIkB,mBAAmB,CAACP,QAApB,CAA6BX,EAAE,CAACe,WAAhC,CAAJ;AAAA,GAAlB,CAAnC;AAAA,CAHkD,CAA7C","sourcesContent":["import { createSelector } from 'reselect'\n\nconst selectFurnitureList = state => state.furnitureBankReducer.productList\nconst selectedAllSelected = state => state.furnitureBankReducer.selectedItems\nconst selectAllDonation = state => state.furnitureBankReducer.donationsData\nconst selectAllFamily = state => state.furnitureBankReducer.familyData\n\n//* Array of all selected items\nexport const selectAllSelected = createSelector(\n  selectedAllSelected,\n  selectedList => selectedList.map(el => el.name)\n)\n\nexport const selectTotalQuantity = createSelector(\n  selectedAllSelected,\n  selectedList => selectedList.reduce(((acc, curr) => acc + curr.quantity), 0)\n)\n\nexport const selectAllUnselected = createSelector(\n  selectFurnitureList,\n  selectAllSelected,\n  ( totalList, allSelected ) => totalList.filter(el => !allSelected.includes(el.product_name))\n)\n\n//* Get relevant postal code list\nexport const selectFilteredDonationPostalCode = createSelector(\n  selectAllDonation,\n  selectAllSelected,\n  (donations, selectedItems) => \n    [...new Set(donations.filter(el => selectedItems.includes(el.product_name)).map(el => el.postal_code))]\n)\n\n//* Get family data for postal codes\nexport const selectFilteredFamilies = createSelector(\n  selectAllFamily,\n  selectFilteredDonationPostalCode,\n  (families, selectedPostalCodes) => families.filter(el => selectedPostalCodes.includes(el.postal_code))\n)\n\n\n\n"]},"metadata":{},"sourceType":"module"}