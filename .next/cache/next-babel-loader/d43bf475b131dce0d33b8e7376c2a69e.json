{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/andrasszesztai/Desktop/boring-barchart-nextjs/components/AutoComplete/index.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport deburr from 'lodash/deburr';\nimport Autosuggest from 'react-autosuggest';\nimport match from 'autosuggest-highlight/match';\nimport parse from 'autosuggest-highlight/parse';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nvar suggestions = [{\n  label: 'Afghanistan'\n}, {\n  label: 'Aland Islands'\n}, {\n  label: 'Albania'\n}, {\n  label: 'Algeria'\n}, {\n  label: 'American Samoa'\n}, {\n  label: 'Andorra'\n}, {\n  label: 'Angola'\n}, {\n  label: 'Anguilla'\n}, {\n  label: 'Antarctica'\n}, {\n  label: 'Antigua and Barbuda'\n}, {\n  label: 'Argentina'\n}, {\n  label: 'Armenia'\n}, {\n  label: 'Aruba'\n}, {\n  label: 'Australia'\n}, {\n  label: 'Austria'\n}, {\n  label: 'Azerbaijan'\n}, {\n  label: 'Bahamas'\n}, {\n  label: 'Bahrain'\n}, {\n  label: 'Bangladesh'\n}, {\n  label: 'Barbados'\n}, {\n  label: 'Belarus'\n}, {\n  label: 'Belgium'\n}, {\n  label: 'Belize'\n}, {\n  label: 'Benin'\n}, {\n  label: 'Bermuda'\n}, {\n  label: 'Bhutan'\n}, {\n  label: 'Bolivia, Plurinational State of'\n}, {\n  label: 'Bonaire, Sint Eustatius and Saba'\n}, {\n  label: 'Bosnia and Herzegovina'\n}, {\n  label: 'Botswana'\n}, {\n  label: 'Bouvet Island'\n}, {\n  label: 'Brazil'\n}, {\n  label: 'British Indian Ocean Territory'\n}, {\n  label: 'Brunei Darussalam'\n}];\n\nfunction renderInputComponent(inputProps) {\n  var classes = inputProps.classes,\n      _inputProps$inputRef = inputProps.inputRef,\n      _inputRef = _inputProps$inputRef === void 0 ? function () {} : _inputProps$inputRef,\n      ref = inputProps.ref,\n      other = _objectWithoutProperties(inputProps, [\"classes\", \"inputRef\", \"ref\"]);\n\n  return __jsx(TextField, _extends({\n    fullWidth: true,\n    InputProps: {\n      inputRef: function inputRef(node) {\n        ref(node);\n\n        _inputRef(node);\n      },\n      classes: {\n        input: classes.input\n      }\n    }\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }));\n}\n\nfunction renderSuggestion(suggestion, _ref) {\n  var query = _ref.query,\n      isHighlighted = _ref.isHighlighted;\n  var matches = match(suggestion.label, query);\n  var parts = parse(suggestion.label, matches);\n  return __jsx(MenuItem, {\n    selected: isHighlighted,\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, parts.map(function (part) {\n    return __jsx(\"span\", {\n      key: part.text,\n      style: {\n        fontWeight: part.highlight ? 500 : 400\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, part.text);\n  })));\n}\n\nfunction getSuggestions(value) {\n  var inputValue = deburr(value.trim()).toLowerCase();\n  var inputLength = inputValue.length;\n  var count = 0;\n  return inputLength === 0 ? [] : suggestions.filter(function (suggestion) {\n    var keep = count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n    if (keep) {\n      count += 1;\n    }\n\n    return keep;\n  });\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.label;\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      height: 250,\n      flexGrow: 1\n    },\n    container: {\n      position: 'relative'\n    },\n    suggestionsContainerOpen: {\n      position: 'absolute',\n      zIndex: 1,\n      marginTop: theme.spacing(1),\n      left: 0,\n      right: 0\n    },\n    suggestion: {\n      display: 'block'\n    },\n    suggestionsList: {\n      margin: 0,\n      padding: 0,\n      listStyleType: 'none'\n    },\n    divider: {\n      height: theme.spacing(2)\n    }\n  };\n});\nexport default function IntegrationAutosuggest() {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = React.useState({\n    single: '',\n    popper: ''\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      state = _React$useState4[0],\n      setState = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      stateSuggestions = _React$useState6[0],\n      setSuggestions = _React$useState6[1];\n\n  var handleSuggestionsFetchRequested = function handleSuggestionsFetchRequested(_ref2) {\n    var value = _ref2.value;\n    setSuggestions(getSuggestions(value));\n  };\n\n  var handleSuggestionsClearRequested = function handleSuggestionsClearRequested() {\n    setSuggestions([]);\n  };\n\n  var handleChange = function handleChange(name) {\n    return function (event, _ref3) {\n      var newValue = _ref3.newValue;\n      setState(_objectSpread({}, state, _defineProperty({}, name, newValue)));\n    };\n  };\n\n  var autosuggestProps = {\n    renderInputComponent: renderInputComponent,\n    suggestions: stateSuggestions,\n    onSuggestionsFetchRequested: handleSuggestionsFetchRequested,\n    onSuggestionsClearRequested: handleSuggestionsClearRequested,\n    getSuggestionValue: getSuggestionValue,\n    renderSuggestion: renderSuggestion\n  };\n  return __jsx(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, __jsx(Autosuggest, _extends({}, autosuggestProps, {\n    inputProps: {\n      classes: classes,\n      id: 'react-autosuggest-simple',\n      label: 'Country',\n      placeholder: 'Search a country (start with a)',\n      value: state.single,\n      onChange: handleChange('single')\n    },\n    theme: {\n      container: classes.container,\n      suggestionsContainerOpen: classes.suggestionsContainerOpen,\n      suggestionsList: classes.suggestionsList,\n      suggestion: classes.suggestion\n    },\n    renderSuggestionsContainer: function renderSuggestionsContainer(options) {\n      return __jsx(Paper, _extends({}, options.containerProps, {\n        square: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), options.children);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/andrasszesztai/Desktop/boring-barchart-nextjs/components/AutoComplete/index.jsx"],"names":["React","deburr","Autosuggest","match","parse","TextField","Paper","MenuItem","makeStyles","suggestions","label","renderInputComponent","inputProps","classes","inputRef","ref","other","node","input","renderSuggestion","suggestion","query","isHighlighted","matches","parts","map","part","text","fontWeight","highlight","getSuggestions","value","inputValue","trim","toLowerCase","inputLength","length","count","filter","keep","slice","getSuggestionValue","useStyles","theme","root","height","flexGrow","container","position","suggestionsContainerOpen","zIndex","marginTop","spacing","left","right","display","suggestionsList","margin","padding","listStyleType","divider","IntegrationAutosuggest","useState","anchorEl","setAnchorEl","single","popper","state","setState","stateSuggestions","setSuggestions","handleSuggestionsFetchRequested","handleSuggestionsClearRequested","handleChange","name","event","newValue","autosuggestProps","onSuggestionsFetchRequested","onSuggestionsClearRequested","id","placeholder","onChange","options","containerProps","children"],"mappings":"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","sourcesContent":["import React from 'react';\nimport deburr from 'lodash/deburr';\nimport Autosuggest from 'react-autosuggest';\nimport match from 'autosuggest-highlight/match';\nimport parse from 'autosuggest-highlight/parse';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst suggestions = [\n  { label: 'Afghanistan' },\n  { label: 'Aland Islands' },\n  { label: 'Albania' },\n  { label: 'Algeria' },\n  { label: 'American Samoa' },\n  { label: 'Andorra' },\n  { label: 'Angola' },\n  { label: 'Anguilla' },\n  { label: 'Antarctica' },\n  { label: 'Antigua and Barbuda' },\n  { label: 'Argentina' },\n  { label: 'Armenia' },\n  { label: 'Aruba' },\n  { label: 'Australia' },\n  { label: 'Austria' },\n  { label: 'Azerbaijan' },\n  { label: 'Bahamas' },\n  { label: 'Bahrain' },\n  { label: 'Bangladesh' },\n  { label: 'Barbados' },\n  { label: 'Belarus' },\n  { label: 'Belgium' },\n  { label: 'Belize' },\n  { label: 'Benin' },\n  { label: 'Bermuda' },\n  { label: 'Bhutan' },\n  { label: 'Bolivia, Plurinational State of' },\n  { label: 'Bonaire, Sint Eustatius and Saba' },\n  { label: 'Bosnia and Herzegovina' },\n  { label: 'Botswana' },\n  { label: 'Bouvet Island' },\n  { label: 'Brazil' },\n  { label: 'British Indian Ocean Territory' },\n  { label: 'Brunei Darussalam' },\n];\n\nfunction renderInputComponent(inputProps) {\n  const { classes, inputRef = () => {}, ref, ...other } = inputProps;\n\n  return (\n    <TextField\n      fullWidth\n      InputProps={{\n        inputRef: node => {\n          ref(node);\n          inputRef(node);\n        },\n        classes: {\n          input: classes.input,\n        },\n      }}\n      {...other}\n    />\n  );\n}\n\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\n  const matches = match(suggestion.label, query);\n  const parts = parse(suggestion.label, matches);\n\n  return (\n    <MenuItem selected={isHighlighted} component=\"div\">\n      <div>\n        {parts.map(part => (\n          <span key={part.text} style={{ fontWeight: part.highlight ? 500 : 400 }}>\n            {part.text}\n          </span>\n        ))}\n      </div>\n    </MenuItem>\n  );\n}\n\nfunction getSuggestions(value) {\n  const inputValue = deburr(value.trim()).toLowerCase();\n  const inputLength = inputValue.length;\n  let count = 0;\n\n  return inputLength === 0\n    ? []\n    : suggestions.filter(suggestion => {\n        const keep =\n          count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n        if (keep) {\n          count += 1;\n        }\n\n        return keep;\n      });\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.label;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: 250,\n    flexGrow: 1,\n  },\n  container: {\n    position: 'relative',\n  },\n  suggestionsContainerOpen: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0,\n  },\n  suggestion: {\n    display: 'block',\n  },\n  suggestionsList: {\n    margin: 0,\n    padding: 0,\n    listStyleType: 'none',\n  },\n  divider: {\n    height: theme.spacing(2),\n  },\n}));\n\nexport default function IntegrationAutosuggest() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [state, setState] = React.useState({\n    single: '',\n    popper: '',\n  });\n\n  const [stateSuggestions, setSuggestions] = React.useState([]);\n\n  const handleSuggestionsFetchRequested = ({ value }) => {\n    setSuggestions(getSuggestions(value));\n  };\n\n  const handleSuggestionsClearRequested = () => {\n    setSuggestions([]);\n  };\n\n  const handleChange = name => (event, { newValue }) => {\n    setState({\n      ...state,\n      [name]: newValue,\n    });\n  };\n\n  const autosuggestProps = {\n    renderInputComponent,\n    suggestions: stateSuggestions,\n    onSuggestionsFetchRequested: handleSuggestionsFetchRequested,\n    onSuggestionsClearRequested: handleSuggestionsClearRequested,\n    getSuggestionValue,\n    renderSuggestion,\n  };\n\n  return (\n    <div className={classes.root}>\n      <Autosuggest\n        {...autosuggestProps}\n        inputProps={{\n          classes,\n          id: 'react-autosuggest-simple',\n          label: 'Country',\n          placeholder: 'Search a country (start with a)',\n          value: state.single,\n          onChange: handleChange('single'),\n        }}\n        theme={{\n          container: classes.container,\n          suggestionsContainerOpen: classes.suggestionsContainerOpen,\n          suggestionsList: classes.suggestionsList,\n          suggestion: classes.suggestion,\n        }}\n        renderSuggestionsContainer={options => (\n          <Paper {...options.containerProps} square>\n            {options.children}\n          </Paper>\n        )}\n      />\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}