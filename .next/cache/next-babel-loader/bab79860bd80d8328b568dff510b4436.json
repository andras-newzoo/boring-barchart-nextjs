{"ast":null,"code":"import _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nvar _jsxFileName = \"/Users/andrasszesztai/Desktop/boring-barchart-nextjs/containers/FurnitureBank2019/index.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Button } from \"@material-ui/core\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { MainContainer, DashboardContainer, ControlsContainer, ChartsContainer, LogoContainer, MainTitle, SocChartsContainer, EnvChartsContainer, LandFillContainer, EmissionContainer, ReqContainer, ChartPaper, colorRed, ChartTitle, colorGreen } from \"./styles\";\nimport { ValueContainer, MapContainer, ControlContainer, FamiliesContainer } from \"./containers\";\nimport { Message } from \"./components\";\nimport { fontSizeM, FlexContainer, TextSpan, fontWeightL, fontSizeXL } from \"../../styles\";\nimport { LandFillSubContainer } from \"./styles/styledContainers\";\nimport { useSelector } from \"react-redux\";\nimport { selectAllSelectedItems, selectAllSelectedPrice, selectAllSelectedVolume, selectAllSelectedWeight } from \"../../store/furnitureBankReducer/selectors\";\nimport { ConvertedNumber } from \"../../components\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    background: colorRed,\n    color: \"white\",\n    fontSize: fontSizeM,\n    boxShadow: \"none\",\n    \"&:hover\": {\n      background: colorRed,\n      color: \"white\"\n    }\n  }\n}));\nconst AVG_MONTHLY_WASTE = 130;\nconst AVG_WEEKLY_WASTE = 30;\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const {\n    0: monthCount,\n    1: setMonthCount\n  } = useState(0);\n  const {\n    0: weekCount,\n    1: setWeekCount\n  } = useState();\n  const items = useSelector(selectAllSelectedItems);\n  const price = useSelector(selectAllSelectedPrice);\n  const weight = useSelector(selectAllSelectedWeight);\n  const volume = useSelector(selectAllSelectedVolume);\n  useEffect(() => {\n    const getMonth = () => Math.floor(weight / AVG_MONTHLY_WASTE);\n\n    if (getMonth() !== monthCount) {\n      setMonthCount(getMonth());\n    }\n  }, [monthCount, weight]);\n  useEffect(() => {\n    const getWeek = () => Math.floor((weight - monthCount * AVG_MONTHLY_WASTE) / AVG_WEEKLY_WASTE);\n\n    if (getWeek() !== weekCount) {\n      setWeekCount(getWeek());\n    }\n  }, [monthCount, weekCount, weight]);\n  return __jsx(React.Fragment, null, __jsx(Helmet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Furniture Bank 2019\")), __jsx(MainContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, __jsx(DashboardContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(ControlsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(LogoContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: \"/static/logos/furnitureBank.svg\",\n    alt: \"furniture bank icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })), __jsx(ControlContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), __jsx(ChartsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, __jsx(SocChartsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, __jsx(MainTitle, {\n    gridArea: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"What is the estimated social impact of your donation?\"), __jsx(MapContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), __jsx(FamiliesContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), __jsx(ValueContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })), __jsx(EnvChartsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(MainTitle, {\n    gridArea: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"What is the estimated environmental impact of your donation?\"), __jsx(ChartPaper, {\n    gridArea: \"landfill\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, __jsx(LandFillContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, __jsx(ChartTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"What is the estimated amount of waste saved?\"), __jsx(Message, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), weight && __jsx(LandFillSubContainer, {\n    gridArea: \"weight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, __jsx(FlexContainer, {\n    area: \"num\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, __jsx(ConvertedNumber, {\n    data: weight,\n    size: fontSizeXL,\n    weight: fontWeightL,\n    color: colorGreen,\n    animate: true,\n    smallSuffix: true,\n    suffixSize: fontSizeM,\n    suffixLineHeight: 1.5,\n    customSuffix: \"lbs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })), __jsx(FlexContainer, {\n    area: \"icon\",\n    align: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, !!monthCount && _Array$from(Array(Math.floor(monthCount)), (_, i) => i + 1).map(el => __jsx(\"img\", {\n    key: el,\n    className: \"garbage-month\",\n    src: \"/static/icons/furnitureBank/garbage.svg\",\n    alt: \"garbage month icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  })), !!getWeek(weight) && _Array$from(Array(Math.floor(getWeek(weight))), (_, i) => i + 1).map(el => __jsx(\"img\", {\n    key: el,\n    className: \"garbage-week\",\n    src: \"/static/icons/furnitureBank/garbage.svg\",\n    alt: \"garbage week icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }))), __jsx(FlexContainer, {\n    area: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, __jsx(TextSpan, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"2 months and 2 weeks of waste in an avg. Canadian household\"))), \"}\", __jsx(LandFillSubContainer, {\n    gridArea: \"volume\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, __jsx(FlexContainer, {\n    area: \"num\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \"Number\"), __jsx(FlexContainer, {\n    area: \"icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Icons\"), __jsx(FlexContainer, {\n    area: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, __jsx(TextSpan, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"Equivalent to 20% of an avg. cargo container\"))))), __jsx(EmissionContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, __jsx(ChartPaper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, __jsx(ChartTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"What is the estimated CO2 emission saved?\"), __jsx(Message, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  })))), __jsx(ReqContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, __jsx(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    disableRipple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, \"Request a Pickup\"))))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/andrasszesztai/Desktop/boring-barchart-nextjs/containers/FurnitureBank2019/index.jsx"],"names":["React","useState","useEffect","Helmet","Button","SendIcon","makeStyles","MainContainer","DashboardContainer","ControlsContainer","ChartsContainer","LogoContainer","MainTitle","SocChartsContainer","EnvChartsContainer","LandFillContainer","EmissionContainer","ReqContainer","ChartPaper","colorRed","ChartTitle","colorGreen","ValueContainer","MapContainer","ControlContainer","FamiliesContainer","Message","fontSizeM","FlexContainer","TextSpan","fontWeightL","fontSizeXL","LandFillSubContainer","useSelector","selectAllSelectedItems","selectAllSelectedPrice","selectAllSelectedVolume","selectAllSelectedWeight","ConvertedNumber","useStyles","theme","button","background","color","fontSize","boxShadow","AVG_MONTHLY_WASTE","AVG_WEEKLY_WASTE","Dashboard","classes","monthCount","setMonthCount","weekCount","setWeekCount","items","price","weight","volume","getMonth","Math","floor","getWeek","Array","_","i","map","el"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Button } from \"@material-ui/core\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport {\n  MainContainer,\n  DashboardContainer,\n  ControlsContainer,\n  ChartsContainer,\n  LogoContainer,\n  MainTitle,\n  SocChartsContainer,\n  EnvChartsContainer,\n  LandFillContainer,\n  EmissionContainer,\n  ReqContainer,\n  ChartPaper,\n  colorRed,\n  ChartTitle,\n  colorGreen\n} from \"./styles\";\nimport {\n  ValueContainer,\n  MapContainer,\n  ControlContainer,\n  FamiliesContainer\n} from \"./containers\";\nimport { Message } from \"./components\";\nimport {\n  fontSizeM,\n  FlexContainer,\n  TextSpan,\n  fontWeightL,\n  fontSizeXL\n} from \"../../styles\";\nimport { LandFillSubContainer } from \"./styles/styledContainers\";\nimport { useSelector } from \"react-redux\";\nimport {\n  selectAllSelectedItems,\n  selectAllSelectedPrice,\n  selectAllSelectedVolume,\n  selectAllSelectedWeight\n} from \"../../store/furnitureBankReducer/selectors\";\nimport { ConvertedNumber } from \"../../components\";\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    background: colorRed,\n    color: \"white\",\n    fontSize: fontSizeM,\n    boxShadow: \"none\",\n    \"&:hover\": {\n      background: colorRed,\n      color: \"white\"\n    }\n  }\n}));\n\nconst AVG_MONTHLY_WASTE = 130;\nconst AVG_WEEKLY_WASTE = 30;\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const [ monthCount, setMonthCount ] = useState(0)\n  const [ weekCount, setWeekCount ] = useState()\n\n  const items = useSelector(selectAllSelectedItems);\n  const price = useSelector(selectAllSelectedPrice);\n  const weight = useSelector(selectAllSelectedWeight);\n  const volume = useSelector(selectAllSelectedVolume);\n\n  \n  useEffect(() => {\n    const getMonth = () => Math.floor(weight/AVG_MONTHLY_WASTE)\n    if(getMonth() !== monthCount){\n      setMonthCount(getMonth())\n    }\n  }, [monthCount, weight])  \n  \n  useEffect(() => {\n    const getWeek = () => Math.floor((weight - (monthCount * AVG_MONTHLY_WASTE))/AVG_WEEKLY_WASTE)\n    if(getWeek() !== weekCount){\n      setWeekCount(getWeek())\n    }\n  }, [monthCount, weekCount, weight])  \n\n  return (\n    <>\n      <Helmet>\n        <title>Furniture Bank 2019</title>\n      </Helmet>\n      <MainContainer>\n        <DashboardContainer>\n          <ControlsContainer>\n            <LogoContainer>\n              <img\n                src=\"/static/logos/furnitureBank.svg\"\n                alt=\"furniture bank icon\"\n              />\n            </LogoContainer>\n            <ControlContainer />\n          </ControlsContainer>\n          <ChartsContainer>\n            <SocChartsContainer>\n              <MainTitle gridArea=\"title\">\n                What is the estimated social impact of your donation?\n              </MainTitle>\n              <MapContainer />\n              <FamiliesContainer />\n              <ValueContainer />\n            </SocChartsContainer>\n            <EnvChartsContainer>\n              <MainTitle gridArea=\"title\">\n                What is the estimated environmental impact of your donation?\n              </MainTitle>\n              <ChartPaper gridArea=\"landfill\">\n                <LandFillContainer>\n                  <ChartTitle>\n                    What is the estimated amount of waste saved?\n                  </ChartTitle>\n                  <Message />\n                  {\n                    weight &&\n                      <LandFillSubContainer gridArea=\"weight\">\n                        <FlexContainer area=\"num\">\n                          <ConvertedNumber\n                            data={weight}\n                            size={fontSizeXL}\n                            weight={fontWeightL}\n                            color={colorGreen}\n                            animate\n                            smallSuffix\n                            suffixSize={fontSizeM}\n                            suffixLineHeight={1.5}\n                            customSuffix=\"lbs\"\n                          />\n                        </FlexContainer>\n                        <FlexContainer\n                          area=\"icon\"\n                          align=\"flex-end\"\n                        >\n                            { \n                              !!monthCount &&\n                              Array.from(Array(Math.floor(monthCount)), (_, i) => i + 1).map(\n                                el => \n                                <img\n                                  key={el}\n                                  className=\"garbage-month\"\n                                  src=\"/static/icons/furnitureBank/garbage.svg\"\n                                  alt=\"garbage month icon\"\n                                />\n                              )\n                            }\n                            {\n                              !!getWeek(weight) && \n                              Array.from(Array(Math.floor(getWeek(weight))), (_, i) => i + 1).map(\n                                el => \n                                <img\n                                  key={el}\n                                  className=\"garbage-week\"\n                                  src=\"/static/icons/furnitureBank/garbage.svg\"\n                                  alt=\"garbage week icon\"\n                                />\n                              )\n                          }\n                        </FlexContainer>\n                        <FlexContainer area=\"text\">\n                          <TextSpan>\n                            2 months and 2 weeks of waste in an avg. Canadian household\n                          </TextSpan>\n                        </FlexContainer>\n                      </LandFillSubContainer>\n                    }\n                  }\n                  <LandFillSubContainer gridArea=\"volume\">\n                    <FlexContainer area=\"num\">Number</FlexContainer>\n                    <FlexContainer area=\"icon\">Icons</FlexContainer>\n                    <FlexContainer area=\"text\">\n                      <TextSpan>\n                        Equivalent to 20% of an avg. cargo container\n                      </TextSpan>\n                    </FlexContainer>\n                  </LandFillSubContainer>\n                </LandFillContainer>\n              </ChartPaper>\n              <EmissionContainer>\n                <ChartPaper>\n                  <ChartTitle>\n                    What is the estimated CO2 emission saved?\n                  </ChartTitle>\n                  <Message />\n                </ChartPaper>\n              </EmissionContainer>\n            </EnvChartsContainer>\n            <ReqContainer>\n              <Button\n                className={classes.button}\n                variant=\"contained\"\n                disableRipple\n              >\n                Request a Pickup\n              </Button>\n            </ReqContainer>\n          </ChartsContainer>\n        </DashboardContainer>\n      </MainContainer>\n    </>\n  );\n};\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}