{"ast":null,"code":"import { useEffect, useState } from \"react\";\n\nconst useSvgResize = svgRef => {\n  const {\n    0: dims,\n    1: setDims\n  } = useState({\n    width: undefined,\n    height: undefined\n  });\n  useEffect(() => {\n    const handleResize = () => {\n      console.log(svgRef.current.offsetHeight);\n      const width = svgRef.current.clientWidth;\n      const height = svgRef.current.clientHeight;\n      setDims({\n        width,\n        height\n      });\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [svgRef]);\n  return dims;\n};\n\nexport default useSvgResize;","map":{"version":3,"sources":["/Users/andrasszesztai/Desktop/boring-barchart-nextjs/hooks/useSvgResize.js"],"names":["useEffect","useState","useSvgResize","svgRef","dims","setDims","width","undefined","height","handleResize","console","log","current","offsetHeight","clientWidth","clientHeight","window","addEventListener","removeEventListener"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,YAAY,GAAGC,MAAM,IAAI;AAC7B,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBJ,QAAQ,CAAC;AAAEK,IAAAA,KAAK,EAAEC,SAAT;AAAoBC,IAAAA,MAAM,EAAED;AAA5B,GAAD,CAAhC;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,YAAY,GAAG,MAAM;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYR,MAAM,CAACS,OAAP,CAAeC,YAA3B;AAEA,YAAMP,KAAK,GAAGH,MAAM,CAACS,OAAP,CAAeE,WAA7B;AACA,YAAMN,MAAM,GAAGL,MAAM,CAACS,OAAP,CAAeG,YAA9B;AACAV,MAAAA,OAAO,CAAC;AAAEC,QAAAA,KAAF;AAASE,QAAAA;AAAT,OAAD,CAAP;AACD,KAND;;AAOAQ,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCR,YAAlC;AACAA,IAAAA,YAAY;AAEZ,WAAO,MAAMO,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCT,YAArC,CAAb;AACD,GAZQ,EAYN,CAACN,MAAD,CAZM,CAAT;AAcA,SAAOC,IAAP;AACD,CAlBD;;AAoBA,eAAeF,YAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useSvgResize = svgRef => {\n  const [dims, setDims] = useState({ width: undefined, height: undefined });\n\n  useEffect(() => {\n    const handleResize = () => {\n      console.log(svgRef.current.offsetHeight);\n      \n      const width = svgRef.current.clientWidth;\n      const height = svgRef.current.clientHeight;\n      setDims({ width, height });\n    };\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [svgRef]);\n\n  return dims;\n};\n\nexport default useSvgResize;\n"]},"metadata":{},"sourceType":"module"}