{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/andrasszesztai/Desktop/boring-barchart-nextjs/components/ConvertedNumber/index.jsx\";\nvar __jsx = React.createElement;\nimport { format } from \"d3-format\";\nimport React, { useState } from \"react\";\nimport CountUp from \"react-countup\";\nimport styled, { keyframes, css } from \"styled-components\";\nimport { fontSizeM, fontWeightS, fontSizeS, colorGrey } from \"../../styles/sharedStyles\";\nexport const getFormattedNumber = ({\n  val,\n  perc,\n  expPlus\n}) => {\n  let formatKey;\n\n  if (perc) {\n    if (expPlus) {\n      if (-0.1 < val && val < 0.1) {\n        formatKey = \"+.2%\";\n      } else {\n        formatKey = \"+.1%\";\n      }\n    } else {\n      if (-0.1 < val && val < 0.1) {\n        formatKey = \".2%\";\n      } else {\n        formatKey = \".1%\";\n      }\n    }\n  } else {\n    if (expPlus) {\n      if (-1 < val && val < 1) {\n        formatKey = \"+.2f\";\n      } else {\n        formatKey = \"+.3s\";\n      }\n    } else {\n      if (-1 < val && val < 1) {\n        formatKey = \".2f\";\n      } else {\n        formatKey = \".3s\";\n      }\n    }\n  }\n\n  return val ? format(formatKey)(val).replace(/([a-zA-Z%])/g, \"\") : \"-\";\n};\nexport const getSuffix = ({\n  val,\n  custom,\n  perc\n}) => {\n  if (val === undefined) {\n    return \"\";\n  }\n\n  if (custom) {\n    return custom;\n  }\n\n  if (perc) {\n    return \"%\";\n  }\n\n  if (val < 1000) {\n    return \"\";\n  }\n\n  if (1000 <= val && val < 1000000) {\n    return \"K\";\n  }\n\n  if (1000000 <= val && val < 1000000000) {\n    return \"M\";\n  }\n\n  if (1000000000 <= val) {\n    return \"B\";\n  }\n};\nconst fadein = keyframes([\"from{opacity:0;}to{opacity:1;}\"]);\nconst Container = styled.span.withConfig({\n  displayName: \"ConvertedNumber__Container\",\n  componentId: \"jdjwlc-0\"\n})([\"display:flex;\", \" font-size:\", \";font-weight:\", \";color:\", \";line-height:\", \";\", \"\"], props => props.isInitalized && css([\"animation:\", \" 2s;\"], fadein), props => props.size, props => props.weight, props => props.color, props => props.lineHeight, props => props.smallSuffix && css([\".suffix{display:flex;display:block;font-size:\", \";margin-left:3px;line-height:.9;}\"], props.suffixSize));\n\nconst ConvertedNumber = ({\n  data,\n  duration = 2,\n  perc,\n  prefix,\n  weight = fontWeightS,\n  size = fontSizeM,\n  color = colorGrey,\n  suffixSize = fontSizeS,\n  lineHeight = 1.2,\n  customSuffix,\n  animate,\n  smallSuffix,\n  expPlus,\n  period,\n  suffixSpace\n}) => {\n  const {\n    0: isInitalized,\n    1: setIsInitalized\n  } = useState(false);\n  const styles = {\n    weight,\n    size,\n    smallSuffix,\n    suffixSize,\n    color,\n    lineHeight\n  };\n  if (data === undefined) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  });\n  const suffix = getSuffix({\n    val: data,\n    custom: customSuffix,\n    perc\n  });\n  return __jsx(React.Fragment, null, __jsx(Container, _extends({}, styles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), prefix, animate ? __jsx(CountUp, {\n    end: data,\n    decimals: 3,\n    preserveValue: true,\n    formattingFn: val => getFormattedNumber({\n      val,\n      perc,\n      expPlus\n    }),\n    onEnd: () => !isInitalized && setIsInitalized(true),\n    duration: duration,\n    decimal: \".\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }) : getFormattedNumber({\n    val: data,\n    perc,\n    expPlus\n  }), suffix && __jsx(\"span\", {\n    className: \"suffix\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, suffixSpace && \" \", suffix), period && __jsx(\"span\", {\n    className: \"period\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \" \", period)));\n};\n\nexport default ConvertedNumber;","map":{"version":3,"sources":["/Users/andrasszesztai/Desktop/boring-barchart-nextjs/components/ConvertedNumber/index.jsx"],"names":["format","React","useState","CountUp","styled","keyframes","css","fontSizeM","fontWeightS","fontSizeS","colorGrey","getFormattedNumber","val","perc","expPlus","formatKey","replace","getSuffix","custom","undefined","fadein","Container","span","props","isInitalized","size","weight","color","lineHeight","smallSuffix","suffixSize","ConvertedNumber","data","duration","prefix","customSuffix","animate","period","suffixSpace","setIsInitalized","styles","suffix"],"mappings":"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","sourcesContent":["import { format } from \"d3-format\";\nimport React, { useState } from \"react\";\nimport CountUp from \"react-countup\";\nimport styled, { keyframes, css } from \"styled-components\";\nimport { fontSizeM, fontWeightS, fontSizeS, colorGrey } from \"../../styles/sharedStyles\";\n\nexport const getFormattedNumber = ({ val, perc, expPlus }) => {\n  let formatKey;\n  if (perc) {\n    if (expPlus) {\n      if (-0.1 < val && val < 0.1) {\n        formatKey = \"+.2%\";\n      } else {\n        formatKey = \"+.1%\";\n      }\n    } else {\n      if (-0.1 < val && val < 0.1) {\n        formatKey = \".2%\";\n      } else {\n        formatKey = \".1%\";\n      }\n    }\n  } else {\n    if (expPlus) {\n      if (-1 < val && val < 1) {\n        formatKey = \"+.2f\";\n      } else {\n        formatKey = \"+.3s\";\n      }\n    } else {\n      if (-1 < val && val < 1) {\n        formatKey = \".2f\";\n      } else {\n        formatKey = \".3s\";\n      }\n    }\n  }\n  return val ? format(formatKey)(val).replace(/([a-zA-Z%])/g, \"\") : \"-\";\n};\n\nexport const getSuffix = ({ val, custom, perc }) => {\n  if (val === undefined) {\n    return \"\";\n  }\n  if (custom) {\n    return custom;\n  }\n  if (perc) {\n    return \"%\";\n  }\n  if (val < 1000) {\n    return \"\";\n  }\n  if (1000 <= val && val < 1000000) {\n    return \"K\";\n  }\n  if (1000000 <= val && val < 1000000000) {\n    return \"M\";\n  }\n  if (1000000000 <= val) {\n    return \"B\";\n  }\n};\nconst fadein = keyframes`\n    from { opacity: 0; }\n    to   { opacity: 1; }\n`;\n\nconst Container = styled.span`\ndisplay: flex;\n\n  ${props =>\n    props.isInitalized &&\n    css`\n      animation: ${fadein} 2s;\n    `}\n  font-size: ${props => props.size}; \n  font-weight: ${props => props.weight};\n  color: ${props => props.color};\n  line-height: ${props => props.lineHeight};\n  ${props =>\n    props.smallSuffix &&\n    css`\n      .suffix {\n        display: flex;\n        display: block;\n        font-size: ${props.suffixSize};\n        margin-left: 3px;\n        line-height: .9;\n      }\n    `}\n`;\n\nconst ConvertedNumber = ({\n  data,\n  duration = 2,\n  perc,\n  prefix,\n  weight = fontWeightS,\n  size = fontSizeM,\n  color = colorGrey,\n  suffixSize= fontSizeS,\n  lineHeight= 1.2,\n  customSuffix,\n  animate,\n  smallSuffix,\n  expPlus,\n  period,\n  suffixSpace\n}) => {\n  const [isInitalized, setIsInitalized] = useState(false);\n  const styles = { weight, size, smallSuffix, suffixSize, color, lineHeight };\n  if (data === undefined) return <div></div>;\n  const suffix = getSuffix({ val: data, custom: customSuffix, perc });\n  return (\n    <>\n      <Container {...styles}>\n        {prefix}\n        {animate ? (\n          <CountUp\n            end={data}\n            decimals={3}\n            preserveValue\n            formattingFn={val => getFormattedNumber({ val, perc, expPlus })}\n            onEnd={() => !isInitalized && setIsInitalized(true)}\n            duration={duration}\n            decimal=\".\"\n          />\n        ) : (\n          getFormattedNumber({ val: data, perc, expPlus })\n        )}\n        {suffix && (\n          <span className=\"suffix\">\n            {suffixSpace && \" \"}\n            {suffix}\n          </span>\n        )}\n        {period && <span className=\"period\"> {period}</span>}\n      </Container>\n    </>\n  );\n};\n\nexport default ConvertedNumber;\n"]},"metadata":{},"sourceType":"module"}