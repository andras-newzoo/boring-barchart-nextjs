{"ast":null,"code":"var _jsxFileName = \"/Users/andrasszesztai/Desktop/boring-barchart-nextjs/containers/FurnitureBank2019/components/Modal.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Modal } from '../../../components';\nimport { ModalContainer } from '../styles';\nimport { FlexContainer, TextSpan, fontWeightL } from '../../../styles';\n\nconst ModalComponent = ({\n  openModal,\n  handleClick,\n  data\n}) => {\n  return __jsx(Modal, {\n    open: openModal,\n    handleClick: handleClick,\n    size: \"m\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(ModalContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: \"icon\",\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"\\xD7\"), data.map(el => __jsx(FlexContainer, {\n    direction: \"column\",\n    align: \"flex-start\",\n    justify: \"flex-start\",\n    area: el.area,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(TextSpan, {\n    paddingBottom: 1,\n    weight: fontWeightL,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, el.title), el.text.map(par => __jsx(React.Fragment, null, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, par), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }))), el.gif && __jsx(\"img\", {\n    src: el.gif,\n    alt: el.gifAlt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })))));\n};\n\nexport default ModalComponent;","map":{"version":3,"sources":["/Users/andrasszesztai/Desktop/boring-barchart-nextjs/containers/FurnitureBank2019/components/Modal.jsx"],"names":["React","Modal","ModalContainer","FlexContainer","TextSpan","fontWeightL","ModalComponent","openModal","handleClick","data","map","el","area","title","text","par","gif","gifAlt"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,aAAT,EAAwBC,QAAxB,EAAkCC,WAAlC,QAAqD,iBAArD;;AAEA,MAAMC,cAAc,GAAG,CAAC;AACtBC,EAAAA,SADsB;AACXC,EAAAA,WADW;AACEC,EAAAA;AADF,CAAD,KAEjB;AACJ,SACE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAEF,SAAb;AAAwB,IAAA,WAAW,EAAEC,WAArC;AAAkD,IAAA,IAAI,EAAC,GAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,OAAO,EAAEA,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIGC,IAAI,CAACC,GAAL,CAASC,EAAE,IACV,MAAC,aAAD;AACE,IAAA,SAAS,EAAC,QADZ;AAEE,IAAA,KAAK,EAAC,YAFR;AAGE,IAAA,OAAO,EAAC,YAHV;AAIE,IAAA,IAAI,EAAEA,EAAE,CAACC,IAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,QAAD;AAAU,IAAA,aAAa,EAAE,CAAzB;AAA4B,IAAA,MAAM,EAAEP,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,EAAE,CAACE,KADN,CANF,EASGF,EAAE,CAACG,IAAH,CAAQJ,GAAR,CAAYK,GAAG,IACd,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,GAAN,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADD,CATH,EAeGJ,EAAE,CAACK,GAAH,IAAU;AAAK,IAAA,GAAG,EAAEL,EAAE,CAACK,GAAb;AAAkB,IAAA,GAAG,EAAEL,EAAE,CAACM,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfb,CADD,CAJH,CADA,CADF;AA4BD,CA/BD;;AAiCA,eAAeX,cAAf","sourcesContent":["\nimport React from 'react';\nimport { Modal } from '../../../components';\nimport { ModalContainer } from '../styles';\nimport { FlexContainer, TextSpan, fontWeightL } from '../../../styles';\n\nconst ModalComponent = ({\n  openModal, handleClick, data\n}) => {\n  return ( \n    <Modal open={openModal} handleClick={handleClick} size=\"m\">\n    <ModalContainer>\n      <span className=\"icon\" onClick={handleClick}>\n        Ã—\n      </span>\n      {data.map(el => (\n        <FlexContainer\n          direction=\"column\"\n          align=\"flex-start\"\n          justify=\"flex-start\"\n          area={el.area}\n        >\n          <TextSpan paddingBottom={1} weight={fontWeightL}>\n            {el.title}\n          </TextSpan>\n          {el.text.map(par => (\n            <>\n              <div>{par}</div>\n              <br />\n            </>\n          ))}\n          {el.gif && <img src={el.gif} alt={el.gifAlt} />}\n        </FlexContainer>\n      ))}\n    </ModalContainer>\n  </Modal>\n   );\n}\n \nexport default ModalComponent;"]},"metadata":{},"sourceType":"module"}