{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andrasszesztai/Desktop/boring-barchart-nextjs/components/IconChart/IconChart.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport _ from \"lodash\";\nimport { select } from \"d3-selection\";\nimport { scaleBand, scaleLinear } from \"d3-scale\";\nimport \"d3-transition\";\nimport { colorGrey } from \"../../styles/sharedStyles\";\nvar Wrapper = styled.div.withConfig({\n  displayName: \"IconChart__Wrapper\",\n  componentId: \"sc-1oa1hct-0\"\n})([\"svg{cursor:pointer;}\"]);\n\nvar IconChart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(IconChart, _Component);\n\n  function IconChart(props) {\n    var _this;\n\n    _classCallCheck(this, IconChart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IconChart).call(this, props));\n    _this.state = {\n      location: _this.props.location,\n      data: [{\n        sortKey: 0,\n        yKey: \"A\",\n        xKey: 250\n      }, {\n        sortKey: 1,\n        yKey: \"B\",\n        xKey: 300\n      }, {\n        sortKey: 2,\n        yKey: \"C\",\n        xKey: 200\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(IconChart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initVis();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.location !== this.props.location) {\n        this.randomizeData();\n      }\n\n      if (colorGrey !== prevProps.fill) {\n        this.updateFill();\n      }\n    }\n  }, {\n    key: \"getColor\",\n    value: function getColor() {}\n  }, {\n    key: \"randomizeData\",\n    value: function randomizeData() {\n      var randomXKey = function randomXKey() {\n        return _.random(50, 300);\n      };\n\n      var data = [{\n        sortKey: randomXKey(),\n        yKey: \"A\",\n        xKey: randomXKey()\n      }, {\n        sortKey: randomXKey(),\n        yKey: \"B\",\n        xKey: randomXKey()\n      }, {\n        sortKey: randomXKey(),\n        yKey: \"C\",\n        xKey: randomXKey()\n      }];\n      this.updateVis(data.sort(function (a, b) {\n        return a.sortKey - b.sortKey;\n      }), this.getColor());\n    }\n  }, {\n    key: \"initVis\",\n    value: function initVis() {\n      var _this2 = this;\n\n      var svg = select(this.svg);\n      var data = this.state.data;\n      svg.attr(\"height\", 40).attr(\"width\", 40);\n      svg.append(\"g\").attr(\"class\", \"chart-area\").attr(\"transform\", \"translate(0,7)\");\n      this.yScale = scaleBand().range([0, 30]).domain(data.map(function (d) {\n        return d.yKey;\n      })).padding(0.3);\n      this.xScale = scaleLinear().range([0, 35]).domain([0, 300]);\n      this.chartArea = svg.select(\".chart-area\");\n      this.chartArea.append(\"line\").attr(\"x1\", 0).attr(\"x2\", 0).attr(\"y1\", 0).attr(\"y2\", 30).attr(\"stroke\", colorGrey).attr(\"stroke-width\", 1).attr(\"stroke-linejoin\", \"round\").attr(\"stroke-linecap\", \"round\");\n      var rects = this.chartArea.selectAll(\"rect\").data(data, function (d) {\n        return d.yKey;\n      });\n      rects.enter().append(\"rect\").attr(\"x\", this.xScale(0)).attr(\"y\", function (d) {\n        return _this2.yScale(d.yKey);\n      }).attr(\"height\", this.yScale.bandwidth()).attr(\"width\", this.xScale(0)).attr(\"fill\", colorGrey).merge(rects).transition(\"in\").duration(1000).delay(function (_, i) {\n        return i * 250;\n      }).attr(\"width\", function (d) {\n        return _this2.xScale(d.xKey);\n      });\n    }\n  }, {\n    key: \"updateVis\",\n    value: function updateVis(data) {\n      var _this3 = this;\n\n      this.yScale.domain(data.map(function (d) {\n        return d.yKey;\n      }));\n      this.chartArea.selectAll(\"rect\").data(data, function (d) {\n        return d.yKey;\n      }).transition(\"update-width\").delay(function (d) {\n        return d.sortKey;\n      }).duration(1000).attr(\"width\", function (d) {\n        return _this3.xScale(d.xKey);\n      }).attr(\"fill\", colorGrey);\n    }\n  }, {\n    key: \"updateFill\",\n    value: function updateFill() {\n      this.chartArea.selectAll(\"rect\").attr(\"fill\", colorGrey);\n      this.chartArea.select(\"line\").attr(\"stroke\", colorGrey);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return __jsx(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, __jsx(\"svg\", {\n        ref: function ref(svg) {\n          return _this4.svg = svg;\n        },\n        onClick: function onClick() {\n          return _this4.randomizeData();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return IconChart;\n}(Component);\n\nexport default IconChart;","map":{"version":3,"sources":["/Users/andrasszesztai/Desktop/boring-barchart-nextjs/components/IconChart/IconChart.jsx"],"names":["React","Component","styled","_","select","scaleBand","scaleLinear","colorGrey","Wrapper","div","IconChart","props","state","location","data","sortKey","yKey","xKey","initVis","prevProps","randomizeData","fill","updateFill","randomXKey","random","updateVis","sort","a","b","getColor","svg","attr","append","yScale","range","domain","map","d","padding","xScale","chartArea","rects","selectAll","enter","bandwidth","merge","transition","duration","delay","i"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport _ from \"lodash\";\nimport { select } from \"d3-selection\";\nimport { scaleBand, scaleLinear } from \"d3-scale\";\nimport \"d3-transition\";\nimport { colorGrey } from \"../../styles/sharedStyles\";\n\nconst Wrapper = styled.div`\n  svg {\n    cursor: pointer;\n  }\n`;\n\nclass IconChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: this.props.location,\n      data: [\n        { sortKey: 0, yKey: \"A\", xKey: 250 },\n        { sortKey: 1, yKey: \"B\", xKey: 300 },\n        { sortKey: 2, yKey: \"C\", xKey: 200 }\n      ]\n    };\n  }\n\n  componentDidMount() {\n    this.initVis();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.location !== this.props.location) {\n      this.randomizeData();\n    }\n\n    if (colorGrey !== prevProps.fill) {\n      this.updateFill();\n    }\n  }\n\n  getColor() {}\n\n  randomizeData() {\n    const randomXKey = () => _.random(50, 300);\n\n    const data = [\n      { sortKey: randomXKey(), yKey: \"A\", xKey: randomXKey() },\n      { sortKey: randomXKey(), yKey: \"B\", xKey: randomXKey() },\n      { sortKey: randomXKey(), yKey: \"C\", xKey: randomXKey() }\n    ];\n\n    this.updateVis(data.sort((a, b) => a.sortKey - b.sortKey), this.getColor());\n  }\n\n  initVis() {\n    const svg = select(this.svg);\n    const { data } = this.state;\n    svg.attr(\"height\", 40).attr(\"width\", 40);\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"chart-area\")\n      .attr(\"transform\", `translate(0,7)`);\n\n    this.yScale = scaleBand()\n      .range([0, 30])\n      .domain(data.map(d => d.yKey))\n      .padding(0.3);\n    this.xScale = scaleLinear()\n      .range([0, 35])\n      .domain([0, 300]);\n    this.chartArea = svg.select(\".chart-area\");\n\n    this.chartArea\n      .append(\"line\")\n      .attr(\"x1\", 0)\n      .attr(\"x2\", 0)\n      .attr(\"y1\", 0)\n      .attr(\"y2\", 30)\n      .attr(\"stroke\", colorGrey)\n      .attr(\"stroke-width\", 1)\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-linecap\", \"round\");\n\n    const rects = this.chartArea.selectAll(\"rect\").data(data, d => d.yKey);\n\n    rects\n      .enter()\n      .append(\"rect\")\n      .attr(\"x\", this.xScale(0))\n      .attr(\"y\", d => this.yScale(d.yKey))\n      .attr(\"height\", this.yScale.bandwidth())\n      .attr(\"width\", this.xScale(0))\n      .attr(\"fill\", colorGrey)\n      .merge(rects)\n      .transition(\"in\")\n      .duration(1000)\n      .delay((_, i) => i * 250)\n      .attr(\"width\", d => this.xScale(d.xKey));\n  }\n\n  updateVis(data) {\n    this.yScale.domain(data.map(d => d.yKey));\n\n    this.chartArea\n      .selectAll(\"rect\")\n      .data(data, d => d.yKey)\n      .transition(\"update-width\")\n      .delay(d => d.sortKey)\n      .duration(1000)\n      .attr(\"width\", d => this.xScale(d.xKey))\n      .attr(\"fill\", colorGrey);\n  }\n\n  updateFill() {\n    this.chartArea.selectAll(\"rect\").attr(\"fill\", colorGrey);\n\n    this.chartArea.select(\"line\").attr(\"stroke\", colorGrey);\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <svg\n          ref={svg => (this.svg = svg)}\n          onClick={() => this.randomizeData()}\n        />\n      </Wrapper>\n    );\n  }\n}\n\nexport default IconChart;\n"]},"metadata":{},"sourceType":"module"}