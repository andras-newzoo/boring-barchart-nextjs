{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/andrasszesztai/Desktop/boring-barchart-nextjs/components/AutoComplete/index.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport deburr from \"lodash/deburr\";\nimport Autosuggest from \"react-autosuggest\";\nimport match from \"autosuggest-highlight/match\";\nimport parse from \"autosuggest-highlight/parse\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { fontWeightS, fontWeightL } from \"../../styles/sharedStyles\";\nimport { Grid } from \"@material-ui/core\";\n\nfunction renderInputComponent(inputProps) {\n  var classes = inputProps.classes,\n      _inputProps$inputRef = inputProps.inputRef,\n      _inputRef = _inputProps$inputRef === void 0 ? function () {} : _inputProps$inputRef,\n      ref = inputProps.ref,\n      other = _objectWithoutProperties(inputProps, [\"classes\", \"inputRef\", \"ref\"]);\n\n  return __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(AccountCircle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(TextField, _extends({\n    fullWidth: true,\n    InputProps: {\n      inputRef: function inputRef(node) {\n        ref(node);\n\n        _inputRef(node);\n      },\n      classes: {\n        input: classes.input\n      }\n    }\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))));\n}\n\nfunction getSuggestions(data, itemKey, value) {\n  var inputValue = deburr(value.trim()).toLowerCase();\n  var inputLength = inputValue.length;\n  var count = 0;\n  return inputLength === 0 ? [] : data.filter(function (item) {\n    var keep = count < 5 && item[itemKey].slice(0, inputLength).toLowerCase() === inputValue;\n\n    if (keep) {\n      count += 1;\n    }\n\n    return keep;\n  });\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    container: {\n      position: \"relative\"\n    },\n    suggestionsContainerOpen: {\n      position: \"absolute\",\n      zIndex: 1,\n      marginTop: theme.spacing(1),\n      left: 0,\n      right: 0\n    },\n    suggestion: {\n      display: \"block\"\n    },\n    suggestionsList: {\n      margin: 0,\n      padding: 0,\n      listStyleType: \"none\"\n    },\n    divider: {\n      height: theme.spacing(2)\n    }\n  };\n});\n\nfunction AutoComplete(_ref) {\n  var data = _ref.data,\n      itemKey = _ref.itemKey;\n  var classes = useStyles();\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      single = _React$useState2[0],\n      setSingle = _React$useState2[1];\n\n  var _useState = useState([]),\n      stateSuggestions = _useState[0],\n      setSuggestions = _useState[1];\n\n  var getSuggestionValue = function getSuggestionValue(item) {\n    return item[itemKey];\n  };\n\n  var handleSuggestionsFetchRequested = function handleSuggestionsFetchRequested(_ref2) {\n    var value = _ref2.value;\n    return setSuggestions(getSuggestions(data, itemKey, value));\n  };\n\n  var handleSuggestionsClearRequested = function handleSuggestionsClearRequested() {\n    return setSuggestions([]);\n  };\n\n  var handleChange = function handleChange(_, _ref3) {\n    var newValue = _ref3.newValue;\n    return setSingle(newValue);\n  };\n\n  var renderSuggestion = function renderSuggestion(data, _ref4) {\n    var query = _ref4.query,\n        isHighlighted = _ref4.isHighlighted;\n    var matches = match(data[itemKey], query);\n    var parts = parse(data[itemKey], matches);\n    return __jsx(MenuItem, {\n      selected: isHighlighted,\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, parts.map(function (part) {\n      return __jsx(\"span\", {\n        key: part.text,\n        style: {\n          fontWeight: part.highlight ? fontWeightL : fontWeightS\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, part.text);\n    })));\n  };\n\n  var autosuggestProps = {\n    renderInputComponent: renderInputComponent,\n    suggestions: stateSuggestions,\n    onSuggestionsFetchRequested: handleSuggestionsFetchRequested,\n    onSuggestionsClearRequested: handleSuggestionsClearRequested,\n    getSuggestionValue: getSuggestionValue,\n    renderSuggestion: renderSuggestion\n  };\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, __jsx(Autosuggest, _extends({}, autosuggestProps, {\n    inputProps: {\n      classes: classes,\n      id: \"react-autosuggest-simple\",\n      placeholder: \"Add a new item\",\n      value: single,\n      onChange: handleChange\n    },\n    theme: {\n      container: classes.container,\n      suggestionsContainerOpen: classes.suggestionsContainerOpen,\n      suggestionsList: classes.suggestionsList,\n      suggestion: classes.suggestion\n    },\n    renderSuggestionsContainer: function renderSuggestionsContainer(options) {\n      return __jsx(Paper, _extends({}, options.containerProps, {\n        square: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), options.children);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  })));\n}\n\nexport default AutoComplete;","map":{"version":3,"sources":["/Users/andrasszesztai/Desktop/boring-barchart-nextjs/components/AutoComplete/index.jsx"],"names":["React","useState","deburr","Autosuggest","match","parse","TextField","Paper","MenuItem","AccountCircle","makeStyles","fontWeightS","fontWeightL","Grid","renderInputComponent","inputProps","classes","inputRef","ref","other","node","input","getSuggestions","data","itemKey","value","inputValue","trim","toLowerCase","inputLength","length","count","filter","item","keep","slice","useStyles","theme","container","position","suggestionsContainerOpen","zIndex","marginTop","spacing","left","right","suggestion","display","suggestionsList","margin","padding","listStyleType","divider","height","AutoComplete","single","setSingle","stateSuggestions","setSuggestions","getSuggestionValue","handleSuggestionsFetchRequested","handleSuggestionsClearRequested","handleChange","_","newValue","renderSuggestion","query","isHighlighted","matches","parts","map","part","text","fontWeight","highlight","autosuggestProps","suggestions","onSuggestionsFetchRequested","onSuggestionsClearRequested","id","placeholder","onChange","options","containerProps","children"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport deburr from \"lodash/deburr\";\nimport Autosuggest from \"react-autosuggest\";\nimport match from \"autosuggest-highlight/match\";\nimport parse from \"autosuggest-highlight/parse\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { fontWeightS, fontWeightL } from \"../../styles/sharedStyles\";\nimport { Grid } from \"@material-ui/core\";\n\nfunction renderInputComponent(inputProps) {\n  const { classes, inputRef = () => {}, ref, ...other } = inputProps;\n\n  return (\n    <Grid \n      container \n      spacing={1} \n      alignItems=\"center\"\n    >\n      <Grid item>\n        <AccountCircle />\n      </Grid>\n      <Grid item>\n        <TextField\n          fullWidth\n          InputProps={{\n            inputRef: node => {\n              ref(node);\n              inputRef(node);\n            },\n            classes: {\n              input: classes.input\n            }\n          }}\n          {...other}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction getSuggestions(data, itemKey, value) {\n  const inputValue = deburr(value.trim()).toLowerCase();\n  const inputLength = inputValue.length;\n  let count = 0;\n\n  return inputLength === 0\n    ? []\n    : data.filter(item => {\n        const keep =\n          count < 5 &&\n          item[itemKey].slice(0, inputLength).toLowerCase() === inputValue;\n\n        if (keep) {\n          count += 1;\n        }\n\n        return keep;\n      });\n}\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    position: \"relative\"\n  },\n  suggestionsContainerOpen: {\n    position: \"absolute\",\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0\n  },\n  suggestion: {\n    display: \"block\"\n  },\n  suggestionsList: {\n    margin: 0,\n    padding: 0,\n    listStyleType: \"none\"\n  },\n  divider: {\n    height: theme.spacing(2)\n  }\n}));\n\nfunction AutoComplete({ data, itemKey }) {\n  const classes = useStyles();\n\n  const [single, setSingle] = React.useState(\"\");\n\n  const [stateSuggestions, setSuggestions] = useState([]);\n\n  const getSuggestionValue = item => item[itemKey];\n\n  const handleSuggestionsFetchRequested = ({ value }) =>\n    setSuggestions(getSuggestions(data, itemKey, value));\n\n  const handleSuggestionsClearRequested = () => setSuggestions([]);\n\n  const handleChange = (_, { newValue }) => setSingle(newValue);\n\n  const renderSuggestion = (data, { query, isHighlighted }) => {\n    const matches = match(data[itemKey], query);\n    const parts = parse(data[itemKey], matches);\n\n    return (\n      <MenuItem selected={isHighlighted} component=\"div\">\n        <div>\n          {parts.map(part => (\n            <span\n              key={part.text}\n              style={{ fontWeight: part.highlight ? fontWeightL : fontWeightS }}\n            >\n              {part.text}\n            </span>\n          ))}\n        </div>\n      </MenuItem>\n    );\n  };\n\n  const autosuggestProps = {\n    renderInputComponent,\n    suggestions: stateSuggestions,\n    onSuggestionsFetchRequested: handleSuggestionsFetchRequested,\n    onSuggestionsClearRequested: handleSuggestionsClearRequested,\n    getSuggestionValue,\n    renderSuggestion\n  };\n\n  return (\n    <div>\n      <Autosuggest\n        {...autosuggestProps}\n        inputProps={{\n          classes,\n          id: \"react-autosuggest-simple\",\n          placeholder: \"Add a new item\",\n          value: single,\n          onChange: handleChange\n        }}\n        theme={{\n          container: classes.container,\n          suggestionsContainerOpen: classes.suggestionsContainerOpen,\n          suggestionsList: classes.suggestionsList,\n          suggestion: classes.suggestion\n        }}\n        renderSuggestionsContainer={options => (\n          <Paper {...options.containerProps} square>\n            {options.children}\n          </Paper>\n        )}\n      />\n    </div>\n  );\n}\n\nexport default AutoComplete;\n"]},"metadata":{},"sourceType":"module"}