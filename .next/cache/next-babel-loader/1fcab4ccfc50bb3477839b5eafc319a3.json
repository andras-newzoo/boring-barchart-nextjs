{"ast":null,"code":"var _jsxFileName = \"/Users/andrasszesztai/Desktop/boring-barchart-nextjs/containers/FurnitureBank2019/containers/LandFillContainer.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { ChartPaper, ChartTitle, LandFillSubContainer, LandFillContainer as Container, colorGreen, ContainerChart } from \"../styles\";\nimport { Message } from \"../components\";\nimport { selectAllSelectedWeight, selectAllSelectedVolume } from \"../../../store/furnitureBankReducer/selectors\";\nimport { useSelector } from \"react-redux\";\nimport { getArray } from \"../../../utils\";\nimport { FlexContainer, fontSizeXL, fontWeightL, fontSizeM, TextSpan } from \"../../../styles\";\nimport { ConvertedNumber } from \"../../../components\";\nconst AVG_MONTHLY_WASTE = 130;\nconst AVG_WEEKLY_WASTE = 30;\nconst CARGO_VOLUME = 1179;\n\nconst LandFillContainer = () => {\n  const {\n    0: monthCount,\n    1: setMonthCount\n  } = useState(0);\n  const {\n    0: weekCount,\n    1: setWeekCount\n  } = useState(0);\n  const weight = useSelector(selectAllSelectedWeight);\n  const volume = useSelector(selectAllSelectedVolume);\n  useEffect(() => {\n    const getMonth = () => Math.floor(weight / AVG_MONTHLY_WASTE);\n\n    if (getMonth() !== monthCount) {\n      setMonthCount(getMonth());\n    }\n  }, [monthCount, weight]);\n  useEffect(() => {\n    const getWeek = () => Math.floor((weight - monthCount * AVG_MONTHLY_WASTE) / AVG_WEEKLY_WASTE);\n\n    if (getWeek() !== weekCount) {\n      setWeekCount(getWeek());\n    }\n  }, [monthCount, weekCount, weight]);\n  const monthText = monthCount > 1 ? \"months\" : \"month\";\n  const weekText = weekCount > 1 ? \"weeks\" : \"week\";\n  const monthArray = getArray(monthCount);\n  const weekArray = getArray(weekCount);\n  return __jsx(ChartPaper, {\n    gridArea: \"landfill\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(ChartTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"What is the estimated amount of waste saved?\"), __jsx(Message, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), !!weight && __jsx(LandFillSubContainer, {\n    gridArea: \"weight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(FlexContainer, {\n    area: \"num\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(ConvertedNumber, {\n    data: weight,\n    size: fontSizeXL,\n    weight: fontWeightL,\n    color: colorGreen,\n    animate: true,\n    smallSuffix: true,\n    suffixSize: fontSizeM,\n    suffixLineHeight: 1.5,\n    customSuffix: \"lbs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), __jsx(FlexContainer, {\n    area: \"icon\",\n    align: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, monthArray && monthArray.length > 0 && monthArray.map(el => __jsx(\"img\", {\n    key: el,\n    className: \"garbage-month\",\n    src: \"/static/icons/furnitureBank/garbage.svg\",\n    alt: \"garbage month icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), weekArray && weekArray.length > 0 && weekArray.map(el => __jsx(\"img\", {\n    key: el,\n    className: \"garbage-week\",\n    src: \"/static/icons/furnitureBank/garbage.svg\",\n    alt: \"garbage week icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }))), __jsx(FlexContainer, {\n    area: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(TextSpan, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, !!monthCount && `${monthCount} ${monthText}`, !!monthCount && !!weekCount && ` and `, !!weekCount ? `${weekCount} ${weekText}` : !monthCount && `Less than 1 ${weekText}`, \" \", \"of waste in an avg. Canadian household\"))), !!volume && __jsx(LandFillSubContainer, {\n    gridArea: \"volume\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, __jsx(FlexContainer, {\n    area: \"num\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(ConvertedNumber, {\n    data: volume,\n    size: fontSizeXL,\n    weight: fontWeightL,\n    color: colorGreen,\n    animate: true,\n    smallSuffix: true,\n    suffixSize: fontSizeM,\n    suffixLineHeight: 1.5,\n    customSuffix: \"cu.ft\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), __jsx(FlexContainer, {\n    area: \"icon\",\n    align: \"flex-start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, __jsx(ContainerChart, {\n    height: volume / CARGO_VOLUME,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })), __jsx(FlexContainer, {\n    area: \"icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: \"container\",\n    src: \"/static/icons/furnitureBank/container.svg\",\n    alt: \"container icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })), __jsx(FlexContainer, {\n    area: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, __jsx(TextSpan, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Equivalent to\", \" \", __jsx(ConvertedNumber, {\n    data: volume / CARGO_VOLUME,\n    display: \"inline-block\",\n    perc: true,\n    animate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), \" \", \"of an avg. cargo container\")))));\n};\n\nexport default LandFillContainer;","map":{"version":3,"sources":["/Users/andrasszesztai/Desktop/boring-barchart-nextjs/containers/FurnitureBank2019/containers/LandFillContainer.jsx"],"names":["React","useState","useEffect","ChartPaper","ChartTitle","LandFillSubContainer","LandFillContainer","Container","colorGreen","ContainerChart","Message","selectAllSelectedWeight","selectAllSelectedVolume","useSelector","getArray","FlexContainer","fontSizeXL","fontWeightL","fontSizeM","TextSpan","ConvertedNumber","AVG_MONTHLY_WASTE","AVG_WEEKLY_WASTE","CARGO_VOLUME","monthCount","setMonthCount","weekCount","setWeekCount","weight","volume","getMonth","Math","floor","getWeek","monthText","weekText","monthArray","weekArray","length","map","el"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  ChartPaper,\n  ChartTitle,\n  LandFillSubContainer,\n  LandFillContainer as Container,\n  colorGreen,\n  ContainerChart\n} from \"../styles\";\nimport { Message } from \"../components\";\nimport {\n  selectAllSelectedWeight,\n  selectAllSelectedVolume\n} from \"../../../store/furnitureBankReducer/selectors\";\nimport { useSelector } from \"react-redux\";\nimport { getArray } from \"../../../utils\";\nimport {\n  FlexContainer,\n  fontSizeXL,\n  fontWeightL,\n  fontSizeM,\n  TextSpan\n} from \"../../../styles\";\nimport { ConvertedNumber } from \"../../../components\";\n\nconst AVG_MONTHLY_WASTE = 130;\nconst AVG_WEEKLY_WASTE = 30;\nconst CARGO_VOLUME = 1179;\n\nconst LandFillContainer = () => {\n  const [monthCount, setMonthCount] = useState(0);\n  const [weekCount, setWeekCount] = useState(0);\n\n  const weight = useSelector(selectAllSelectedWeight);\n  const volume = useSelector(selectAllSelectedVolume);\n\n  useEffect(() => {\n    const getMonth = () => Math.floor(weight / AVG_MONTHLY_WASTE);\n    if (getMonth() !== monthCount) {\n      setMonthCount(getMonth());\n    }\n  }, [monthCount, weight]);\n\n  useEffect(() => {\n    const getWeek = () =>\n      Math.floor((weight - monthCount * AVG_MONTHLY_WASTE) / AVG_WEEKLY_WASTE);\n    if (getWeek() !== weekCount) {\n      setWeekCount(getWeek());\n    }\n  }, [monthCount, weekCount, weight]);\n\n  const monthText = monthCount > 1 ? \"months\" : \"month\";\n  const weekText = weekCount > 1 ? \"weeks\" : \"week\";\n\n  const monthArray = getArray(monthCount);\n  const weekArray = getArray(weekCount);\n\n  return (\n    <ChartPaper gridArea=\"landfill\">\n      <Container>\n        <ChartTitle>What is the estimated amount of waste saved?</ChartTitle>\n        <Message />\n        {!!weight && (\n          <LandFillSubContainer gridArea=\"weight\">\n            <FlexContainer area=\"num\">\n              <ConvertedNumber\n                data={weight}\n                size={fontSizeXL}\n                weight={fontWeightL}\n                color={colorGreen}\n                animate\n                smallSuffix\n                suffixSize={fontSizeM}\n                suffixLineHeight={1.5}\n                customSuffix=\"lbs\"\n              />\n            </FlexContainer>\n            <FlexContainer area=\"icon\" align=\"flex-end\">\n              {monthArray &&\n                monthArray.length > 0 &&\n                monthArray.map(el => (\n                  <img\n                    key={el}\n                    className=\"garbage-month\"\n                    src=\"/static/icons/furnitureBank/garbage.svg\"\n                    alt=\"garbage month icon\"\n                  />\n                ))}\n              {weekArray &&\n                weekArray.length > 0 &&\n                weekArray.map(el => (\n                  <img\n                    key={el}\n                    className=\"garbage-week\"\n                    src=\"/static/icons/furnitureBank/garbage.svg\"\n                    alt=\"garbage week icon\"\n                  />\n                ))}\n            </FlexContainer>\n            <FlexContainer area=\"text\">\n              <TextSpan>\n                {!!monthCount && `${monthCount} ${monthText}`}\n                {!!monthCount && !!weekCount && ` and `}\n                {!!weekCount\n                  ? `${weekCount} ${weekText}`\n                  : !monthCount && `Less than 1 ${weekText}`}{\" \"}\n                of waste in an avg. Canadian household\n              </TextSpan>\n            </FlexContainer>\n          </LandFillSubContainer>\n        )}\n        {!!volume && (\n          <LandFillSubContainer gridArea=\"volume\">\n            <FlexContainer area=\"num\">\n              <ConvertedNumber\n                data={volume}\n                size={fontSizeXL}\n                weight={fontWeightL}\n                color={colorGreen}\n                animate\n                smallSuffix\n                suffixSize={fontSizeM}\n                suffixLineHeight={1.5}\n                customSuffix=\"cu.ft\"\n              />\n            </FlexContainer>\n            <FlexContainer area=\"icon\" align=\"flex-start\">\n              <ContainerChart height={volume / CARGO_VOLUME} />\n            </FlexContainer>\n            <FlexContainer area=\"icon\">\n              <img\n                className=\"container\"\n                src=\"/static/icons/furnitureBank/container.svg\"\n                alt=\"container icon\"\n              />\n            </FlexContainer>\n            <FlexContainer area=\"text\">\n              <TextSpan>\n                Equivalent to{\" \"}\n                <ConvertedNumber\n                  data={volume / CARGO_VOLUME}\n                  display=\"inline-block\"\n                  perc\n                  animate\n                />{\" \"}\n                of an avg. cargo container\n              </TextSpan>\n            </FlexContainer>\n          </LandFillSubContainer>\n        )}\n      </Container>\n    </ChartPaper>\n  );\n};\n\nexport default LandFillContainer;\n"]},"metadata":{},"sourceType":"module"}