{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/andrasszesztai/Desktop/boring-barchart-nextjs/containers/FurnitureBank2019/components/Map/MapContent.jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from 'react';\nimport ReactMapGL from \"react-map-gl\";\nimport { MapContainer } from '../../styles/styledContainers';\nimport { ChartPaper, ChartTitle } from '../../styles/styledElements';\nimport { HEATMAP_SOURCE_ID, heatMapStyles } from './mapStyles';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredCoordinates } from '../../../../store/furnitureBankReducer/selectors';\nimport { config } from '../../../../config';\n\nconst MapContent = () => {\n  const filteredCoordinates = useSelector(selectFilteredCoordinates);\n  const {\n    0: initMap,\n    1: setInitMap\n  } = useState(false);\n  const mapRef = useRef();\n  const viewport = {\n    width: \"100%\",\n    height: \"100%\",\n    latitude: 43.66107,\n    longitude: -79.477015,\n    zoom: 8\n  };\n\n  const handleMapLoaded = () => {\n    mapRef.current.getMap().addSource(HEATMAP_SOURCE_ID, {\n      type: \"geojson\",\n      data: makeGeoJSON(filteredCoordinates)\n    });\n    mapRef.current.getMap().addLayer(heatMapStyles);\n    setInitMap(true);\n  };\n\n  useEffect(() => {\n    if (initMap) {\n      mapRef.current.getMap().getSource(HEATMAP_SOURCE_ID).setData(makeGeoJSON(filteredCoordinates));\n    }\n  }, [filteredCoordinates, initMap]);\n\n  const makeGeoJSON = data => {\n    if (!data) return undefined;\n    return {\n      type: \"FeatureCollection\",\n      features: data.map(feature => {\n        return {\n          type: \"Feature\",\n          properties: {\n            id: feature.postal_code\n          },\n          geometry: {\n            type: \"Point\",\n            coordinates: feature.coors ? [feature.coors.longitude, feature.coors.latitude, 0] : [0, 0, 0]\n          }\n        };\n      })\n    };\n  };\n\n  return __jsx(MapContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(ChartPaper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(ChartTitle, {\n    withBG: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"In Which areas will your donated furniture be received?\"), __jsx(ReactMapGL, _extends({\n    ref: mapRef,\n    mapboxApiAccessToken: config.MAP_API\n  }, viewport, {\n    mapStyle: \"mapbox://styles/szeandr/ck1664yzv02iq1crq35ea679o\",\n    onLoad: handleMapLoaded,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }))));\n};\n\nexport default MapContent;","map":{"version":3,"sources":["/Users/andrasszesztai/Desktop/boring-barchart-nextjs/containers/FurnitureBank2019/components/Map/MapContent.jsx"],"names":["React","useEffect","useRef","useState","ReactMapGL","MapContainer","ChartPaper","ChartTitle","HEATMAP_SOURCE_ID","heatMapStyles","useSelector","selectFilteredCoordinates","config","MapContent","filteredCoordinates","initMap","setInitMap","mapRef","viewport","width","height","latitude","longitude","zoom","handleMapLoaded","current","getMap","addSource","type","data","makeGeoJSON","addLayer","getSource","setData","undefined","features","map","feature","properties","id","postal_code","geometry","coordinates","coors","MAP_API"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport ReactMapGL from \"react-map-gl\";\n\nimport { MapContainer } from '../../styles/styledContainers';\nimport { ChartPaper, ChartTitle } from '../../styles/styledElements';\nimport { HEATMAP_SOURCE_ID, heatMapStyles } from './mapStyles';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredCoordinates } from '../../../../store/furnitureBankReducer/selectors';\nimport { config } from '../../../../config';\n\nconst MapContent = () => {\n\n  const filteredCoordinates = useSelector(selectFilteredCoordinates);\n  const [initMap, setInitMap] = useState(false);\n  const mapRef = useRef();\n  const viewport = {\n    width: \"100%\",\n    height: \"100%\",\n    latitude: 43.66107,\n    longitude: -79.477015,\n    zoom: 8\n  };\n\n  const handleMapLoaded = () => {\n    mapRef.current.getMap().addSource(HEATMAP_SOURCE_ID, {\n      type: \"geojson\",\n      data: makeGeoJSON(filteredCoordinates)\n    });\n    mapRef.current.getMap().addLayer(heatMapStyles);\n    setInitMap(true);\n  };\n\n  useEffect(() => {\n    if (initMap) {\n      mapRef.current\n        .getMap()\n        .getSource(HEATMAP_SOURCE_ID)\n        .setData(makeGeoJSON(filteredCoordinates));\n    }\n  }, [filteredCoordinates, initMap]);\n\n  const makeGeoJSON = data => {\n    if (!data) return undefined;\n    return {\n      type: \"FeatureCollection\",\n      features: data.map(feature => {\n        return {\n          type: \"Feature\",\n          properties: {\n            id: feature.postal_code\n          },\n          geometry: {\n            type: \"Point\",\n            coordinates: feature.coors\n              ? [feature.coors.longitude, feature.coors.latitude, 0]\n              : [0, 0, 0]\n          }\n        };\n      })\n    };\n  };\n\n\n  return (\n    <MapContainer>\n    <ChartPaper>\n      <ChartTitle\n        withBG\n      >\n        In Which areas will your donated furniture be received?\n      </ChartTitle>\n      <ReactMapGL\n        ref={mapRef}\n        mapboxApiAccessToken={config.MAP_API}\n        {...viewport}\n        mapStyle=\"mapbox://styles/szeandr/ck1664yzv02iq1crq35ea679o\"\n        onLoad={handleMapLoaded}\n      ></ReactMapGL>\n    </ChartPaper>\n  </MapContainer>\n  )\n}\n\nexport default MapContent"]},"metadata":{},"sourceType":"module"}